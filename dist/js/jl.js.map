{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jl.js","js/jl.js","node_modules/base64-js/lib/b64.js","node_modules/bindall-standalone/index.js","node_modules/buffer/index.js","node_modules/buffer/node_modules/isarray/index.js","node_modules/clone/clone.js","node_modules/defaults/index.js","node_modules/ieee754/index.js","node_modules/lethargy/lethargy.js","node_modules/tiny-emitter/index.js","node_modules/virtual-scroll/src/clone.js","node_modules/virtual-scroll/src/index.js","node_modules/virtual-scroll/src/support.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","controller","_virtualScroll","_virtualScroll2","minTimeout","maxTimeout","domLoaded","stillNeedToLoad","fontLoaded","setTimeout","htmlClass","slice","document","documentElement","classList","indexOf","loadHome","window","addEventListener","Screen","this","slideNumberEle","getElementById","slideNumberTotalEle","allScreens","querySelectorAll","app","scrollType","getAttribute","scrollSettings","slide","timeout","videoTimeout","pos","distance","working","resizingScreenTimeout","vScroll","screens","loading","querySelector","backgrounds","home","ottoform","frnkrok","jlv3","juiced","menu","menuContainer","writings","writingsContainer","writingBlock","leftScreenPane","writingProgressLoader","menuOpen","bindScreens","key","forEach","bind","screenKeys","Object","keys","slideTouchEvent","type","touches","clientY","preventDefault","_scrollDelta","direction","wheelDistance","evt","event","w","wheelDelta","d","detail","deltaY","touchDelta","_direction","_distance","returnWheelDirection","that","returnWheelDistance","_screenOn","_keyTo","_keyFrom","toggle","from","to","remove","add","_slideCount","screen","innerHTML","setAttribute","openMenu","closeMenu","toggleMenu","resize","clearTimeout","virtualScroll","rAF","currentY","ease","currentYBG","easeBG","targetY","destroy","off","cancelAnimationFrame","firefoxMultiplier","section","sectionBG","sectionHeight","getBoundingClientRect","height","actPoints","actPointEles","x","_actPoint","_actPointAction","action","JSON","parse","_offset","offsetTop","innerHeight","actionKey","ele","push","point","class","element","on","Math","max","min","run","requestAnimationFrame","round","_x","ap","classAdd","_ele","style","tB","sB","_this","innerText","body","isParentWritingBlock","target","treeDepth","parentNode","id","links","writingLinks","link","writingLink","onpopstate","updateReaderOnPop","openReaderPane","closeReaderPane","title","state","reading","closeReader","stateObj","history","pushState","location","display","className","_location","href","httpRequest","XMLHttpRequest","showWriting","readyState","DONE","status","doc","implementation","createHTMLDocument","responseText","html","scrollTop","onreadystatechange","open","send","clearLetterTimeout","removeLettersState","instantRemoveState","clearLetterAnswers","instantRemove","removeSet","left","revealLetterAnswers","answer","answers","split","_activateE","_size","innerWidth","_left","virtual-scroll",2,"init","len","lookup","revLookup","charCodeAt","toByteArray","b64","j","tmp","placeHolders","arr","Arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array",3,"func","context","apply","arguments","toString","prototype","hasOwnProperty","object","console","warn","functions","method",4,"global","typedArraySupport","foo","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","write","fromArrayLike","array","byteOffset","isBuffer","copy","buffer","isnan","isArray","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","swap","b","m","arrayIndexOf","val","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","y","concat","list","swap16","swap32","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","self","base64-js","isarray",5,6,"clone","parent","circular","depth","_clone","child","proto","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","useBuffer","getPrototypeOf","create","index","allParents","allChildren","attrs","getOwnPropertyDescriptor","filter","__objToStr","re","flags","ignoreCase","multiline","clonePrototype",7,"options","defaults",8,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2",9,"root","Lethargy","stability","sensitivity","tolerance","delay","lastUpDeltas","ref","results","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","now","shift","isInertia","lastDeltas","lastDeltasNew","lastDeltasOld","newAverage","newSum","oldAverage","oldSum","reduce","showLastUpDeltas","showLastDownDeltas",10,"E","name","callback","ctx","fn","once","listener","_","emit","evtArr","evts","liveEvents",11,"stringify",12,"VirtualScroll","bindAll","mouseMultiplier","touchMultiplier","keyStep","preventTouch","unpreventTouchClass","limitInertia","_lethargy","_emitter","Emitter","_event","deltaX","touchStartX","touchStartY","bodyTouchAction","support","EVT_ID","keyCodes","LEFT","UP","RIGHT","DOWN","_notify","_onWheel","wheelDeltaX","wheelDeltaY","isFirefox","deltaMode","_onMouseWheel","_onTouchStart","targetTouches","pageX","pageY","_onTouchMove","contains","_onKeyDown","keyCode","_bind","hasWheelEvent","hasMouseWheelEvent","hasTouch","hasPointer","hasTouchWin","msTouchAction","hasKeyDown","_unbind","removeEventListener","cb","events","reset","./clone","./support","bindall-standalone","lethargy","tiny-emitter",13,"navigator","msMaxTouchPoints","msPointerEnabled","userAgent"],"mappings":"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","file":"jl.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _virtualScroll = require('virtual-scroll');\n\nvar _virtualScroll2 = _interopRequireDefault(_virtualScroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar controller;\n\n(function () {\n  'use strict';\n\n  var minTimeout = 200;\n  var maxTimeout = 1700;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  // Try to load page as quickly as possible if fonts/content loaded\n  setTimeout(function () {\n\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if (htmlClass.indexOf('wf-active') !== -1) {\n      fontLoaded = true;\n    }\n    if (domLoaded && fontLoaded) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  // If unable to load above, loadHome() regardless after maxTimeout is reached\n  setTimeout(function () {\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener('DOMContentLoaded', function () {\n\n    domLoaded = true;\n\n    if (stillNeedToLoad) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n  });\n})();\n\ncontroller = function () {\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById('slide-number');\n    this.slideNumberTotalEle = document.getElementById('slide-number-total');\n    this.allScreens = [].slice.call(document.querySelectorAll('.screen'));\n    this.app = document.getElementById('app');\n    this.scrollType = this.app.getAttribute('data-scroll') || 'screens';\n    this.scrollSettings = {\n      slide: 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0\n    };\n    this.working = false;\n    this.resizingScreenTimeout = null;\n    this.vScroll = null;\n    this.screens = {\n      loading: document.querySelector('.loader')\n    };\n    this.backgrounds = {\n      home: document.querySelector('.video-home'),\n      ottoform: document.querySelector('.video-ottoform'),\n      frnkrok: document.querySelector('.video-frnkrok'),\n      jlv3: document.querySelector('.video-jlv3'),\n      juiced: document.querySelector('.video-juiced')\n    };\n    this.menu = document.querySelector('.screen--menu');\n    this.menuContainer = document.getElementById('jl-menu');\n    this.writings = document.getElementById('writings-list');\n    this.writingsContainer = document.getElementById('writings-container');\n    this.writingBlock = document.getElementById('writing-block');\n    this.leftScreenPane = document.getElementById('left-screen-pane');\n    this.writingProgressLoader = document.getElementById('writing-progress-bar');\n\n    this.menuOpen = false;\n\n    /**\n    * Binds each screen loaded from this.allScreens to the screens object\n    * for later use\n    *\n    * @param slide - Object - the dom slide object\n    */\n    this.bindScreens = function (slide) {\n      var key = slide.getAttribute('data-screen');\n      if (key) {\n        this.screens[key] = slide;\n      }\n    };\n\n    // runs bindScreens();\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n    // Helper function grab the keys of this.screens\n    this.screenKeys = Object.keys(this.screens);\n\n    /** Touch Event Listener Function\n    *\n    * Acts as a helper to reach the slide function upon a touch event from  a\n    * touch device.\n    *\n    * @param e - Event - the touch event\n    */\n    this.slideTouchEvent = function (e) {\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if (e.type === 'touchmove' && this.scrollSettings.pos) {\n        e.preventDefault();\n        var _scrollDelta = (this.scrollSettings.pos - e.touches[0].clientY) * 2;\n        if (_scrollDelta > 10) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if (_scrollDelta < -10) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function (evt) {\n      if (!evt) evt = event;\n      var w = evt.wheelDelta,\n          d = evt.detail;\n      if (d) {\n        if (w) return w / d / 40 * d > 0 ? 1 : -1; // Opera\n        else return -d / 3; // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w / 120; // IE/Safari/Chrome TODO: /3 for Chrome OS X\n        else {\n            return -evt.deltaY / 15;\n          }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    * @param touchDelta - event - a touch event\n    */\n    this.slide = function (e, touchDelta) {\n\n      if (this.working) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function returnWheelDirection(evt) {\n        return evt.detail < 0 ? 1 : evt.wheelDelta > 0 ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function returnWheelDistance(evt) {\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if (touchDelta) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if (_distance <= 0.25 && _distance >= -0.25) {\n        this.working = true;\n        setTimeout(function () {\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if (_direction === -1) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = _screenOn === this.screenKeys.length ? 1 : _screenOn; // fix later remove static num\n      } else if (_direction === 1) {\n          // decrease screen\n          _screenOn = this.scrollSettings.slide - 1;\n          _screenOn = _screenOn <= 0 ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n        }\n\n      _keyTo = this.screenKeys[_screenOn];\n      this.toggle(_keyFrom, _keyTo);\n    };\n\n    this.toggle = function (from, to) {\n\n      if (this.menuOpen === true) {\n        this.working = false;\n        return false;\n      }\n\n      this.screens.home.classList.remove('active');\n\n      this.screens[from].classList.remove('slide-in');\n      this.screens[from].classList.remove('fade-out');\n      this.screens[from].classList.add('slide-out');\n\n      this.screens[to].classList.add('slide-in');\n      this.screens[to].classList.remove('slide-out');\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for (var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\\'number\\'>' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove('slide-out');\n        }\n        _slideCount++;\n      }\n\n      if (this.backgrounds[from]) {\n        this.backgrounds[from].setAttribute('data-enable', 'false');\n      }\n\n      if (this.backgrounds[to]) {\n        this.backgrounds[to].setAttribute('data-enable', 'true');\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function () {\n        that.working = false;\n      }, 1350);\n    };\n\n    this.openMenu = function () {\n\n      this.menu.classList.remove('fade-out-slow');\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.add('fade-out-slow');\n      }\n\n      this.menu.classList.add('fade-in');\n      this.menuOpen = true;\n      this.menuContainer.classList.add('activate');\n    };\n\n    this.closeMenu = function () {\n\n      this.menu.classList.remove('fade-in');\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.remove('fade-out-slow');\n      }\n\n      this.menu.classList.remove('fade-in');\n      this.menu.classList.add('fade-out-slow');\n      this.menuOpen = false;\n      this.menuContainer.classList.remove('activate');\n    };\n\n    this.toggleMenu = function () {\n      if (this.menuOpen) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n    this.resize = function () {\n      clearTimeout(this.resizingScreenTimeout);\n      var that = this;\n      this.resizingScreenTimeout = setTimeout(function () {\n        that.virtualScroll(true);\n      }, 100);\n    };\n\n    var currentY = 0,\n        ease = 0.1;\n    var currentYBG = 0,\n        easeBG = 0.085;\n    var targetY = 0;\n    var rAF;\n\n    /** this.virtualScroll\n    * Creates the virtual scroll instance\n    *\n    * @param boolean destroy - if true fires .off() method on vScroll and mututates\n    * object into a new vs instance.\n    */\n    this.virtualScroll = function (destroy) {\n\n      if (destroy) {\n        targetY = currentY;\n        this.vScroll.off();\n        window.cancelAnimationFrame(rAF);\n      }\n\n      this.vScroll = new _virtualScroll2.default({ firefoxMultiplier: 25 });\n      var section = document.getElementById('scroll-section');\n      var sectionBG = document.getElementById('scroll-section-background');\n      var sectionHeight = section.getBoundingClientRect().height;\n\n      var actPoints = [];\n      var actPointEles = [].slice.call(document.querySelectorAll('[data-actpoint]'));\n      for (var x = 0; x < actPointEles.length; x++) {\n        var _actPoint = actPointEles[x];\n        var _actPointAction = _actPoint.getAttribute('data-actpoint') || null;\n        if (_actPointAction) {\n          var action = JSON.parse(_actPointAction);\n          var _offset = _actPoint.offsetTop - window.innerHeight;\n          if (action) {\n            var actionKey = Object.keys(action);\n            var ele = document.querySelector(action[actionKey[0]]);\n            if (ele) {\n              actPoints.push({ point: _offset, class: actionKey[0], element: ele });\n            }\n          }\n        }\n      }\n\n      this.vScroll.on(function (e) {\n        targetY += e.deltaY;\n        targetY = Math.max((sectionHeight - window.innerHeight) * -1, targetY);\n        targetY = Math.min(0, targetY);\n      });\n\n      var run = function run() {\n\n        rAF = requestAnimationFrame(run);\n\n        currentY += Math.round((targetY - currentY) * ease, 2);\n        currentYBG += Math.round((targetY - currentYBG) * easeBG, 2);\n\n        for (var _x = 0; _x < actPoints.length; _x++) {\n\n          var ap = actPoints[_x];\n          var point = ap.point * -1;\n          var classAdd = ap.class;\n          var _ele = ap.element;\n\n          if (currentY < point) {\n            _ele.classList.add(classAdd);\n          } else {\n            _ele.classList.remove(classAdd);\n          }\n        }\n\n        var t = 'translateY(' + currentY + 'px)';\n        var s = section.style;\n        s['transform'] = t;\n        s['webkitTransform'] = t;\n        s['mozTransform'] = t;\n        s['msTransform'] = t;\n\n        var tB = 'translateY(' + currentYBG + 'px)';\n        var sB = sectionBG.style;\n        sB['transform'] = tB;\n        sB['webkitTransform'] = tB;\n        sB['mozTransform'] = tB;\n        sB['msTransform'] = tB;\n      };\n\n      run();\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function () {\n      var _this = this;\n\n      this.screens.loading.classList.add('out');\n      this.screens.home.classList.add('active');\n\n      if (this.slideNumberTotalEle) {\n\n        this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n      }\n\n      if (this.scrollType === 'screens') {\n\n        document.body.addEventListener('wheel', this.slide.bind(this));\n        document.body.addEventListener('touchstart', this.slideTouchEvent.bind(this));\n        document.body.addEventListener('touchmove', this.slideTouchEvent.bind(this));\n      }\n\n      if (this.scrollType === 'smooth') {\n        (function () {\n\n          var isParentWritingBlock = function isParentWritingBlock(target, treeDepth) {\n            treeDepth = treeDepth || 0;\n            if (treeDepth > 6) {\n              treeDepth = 0;\n              return false;\n            }\n            if (!target.parentNode) return false;\n            return target.id !== 'writing-block' ? isParentWritingBlock(target.parentNode, ++treeDepth) : true;\n          };\n\n          document.addEventListener('touchmove', function (e) {\n            if (e.target && !isParentWritingBlock(e.target)) e.preventDefault();\n          });\n\n          window.addEventListener('resize', _this.resize.bind(_this));\n\n          _this.virtualScroll();\n        })();\n      }\n\n      if (this.writings) {\n        // intercept links\n        var links = this.writings.querySelectorAll('a');\n        var writingLinks = [].slice.call(links);\n        var that = this;\n        writingLinks.forEach(function (link) {\n          link.addEventListener('click', function (e) {\n            that.writingLink(e, this);\n          });\n        });\n        window.onpopstate = this.updateReaderOnPop.bind(this);\n      }\n    };\n\n    this.openReaderPane = function () {\n      this.leftScreenPane.classList.add('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'true');\n    };\n\n    this.closeReaderPane = function () {\n      this.leftScreenPane.classList.remove('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'false');\n      window.document.title = 'Joey Lea - Writings';\n    };\n\n    this.updateReaderOnPop = function (e) {\n      if (e.state && e.state.reading && e.state.reading !== 'none') this.writingLink(null, null, e.state.reading);else this.closeReaderPane();\n    };\n\n    this.closeReader = function () {\n      this.closeReaderPane();\n      var stateObj = { reading: null };\n      history.pushState(stateObj, 'Joey Lea- Writings', '/writings/');\n    };\n\n    this.writingLink = function (e, link, location) {\n\n      if (e) e.preventDefault();\n\n      this.writingBlock.style.display = 'none';\n\n      this.writingProgressLoader.className = 'progress-bar';\n\n      this.openReaderPane();\n\n      var _location;\n      if (location) {\n        _location = location;\n      } else {\n        _location = link.href;\n      }\n\n      var httpRequest = new XMLHttpRequest();\n\n      if (!httpRequest) {\n        return false;\n      }\n\n      var showWriting = function showWriting() {\n        if (httpRequest.readyState === XMLHttpRequest.DONE) {\n          if (httpRequest.status === 200) {\n            if (link) {\n              var stateObj = { reading: _location };\n              history.pushState(stateObj, 'Joey Lea- Writings', _location);\n            }\n            var doc = document.implementation.createHTMLDocument('writing-doc');\n            doc.documentElement.innerHTML = httpRequest.responseText;\n            var html = doc.getElementById('writing-block');\n            this.writingBlock.innerHTML = html.innerHTML;\n            this.writingBlock.style.display = 'block';\n            this.writingProgressLoader.classList.add('finish');\n            this.writingBlock.scrollTop = 0;\n            window.document.title = doc.title || 'Joey Lea - Writings';\n            targetY = 0;\n          } else {\n            this.writingBlock.innerHTML = 'Something went wrong';\n          }\n        }\n      };\n\n      this.writingProgressLoader.classList.add('start');\n      httpRequest.onreadystatechange = showWriting.bind(this);\n      httpRequest.open('GET', _location);\n      httpRequest.send();\n    };\n\n    this.clearLetterTimeout = null;\n    this.removeLettersState = [];\n    this.instantRemoveState = [];\n    this.clearLetterAnswers = function (instantRemove) {\n\n      var removeSet;\n\n      if (instantRemove) {\n        removeSet = instantRemove;\n      } else {\n        removeSet = this.removeLettersState;\n        this.instantRemoveState = [];\n        this.removeLettersState = [];\n      }\n\n      removeSet.forEach(function (e) {\n        e.classList.remove('active');\n        e.style.left = e.getAttribute('data-left');\n      });\n    };\n\n    this.revealLetterAnswers = function (ele) {\n\n      clearTimeout(this.clearLetterTimeout);\n\n      this.instantRemoveState = this.removeLettersState;\n      if (this.instantRemoveState.length > 0) {\n        this.clearLetterAnswers(this.instantRemoveState);\n      }\n\n      var answer = ele.getAttribute('data-answer');\n      var answers = answer.split(',');\n\n      for (var x = 0; x < answers.length; x++) {\n        var _activateE = document.querySelector('.' + answers[x]);\n        _activateE.setAttribute('data-left', _activateE.style.left);\n        var _size = Math.min(window.innerWidth / 18, 55);\n        var _left = x * _size + 'px';\n        _activateE.classList.add('active');\n        _activateE.style.left = _left;\n        this.removeLettersState.push(_activateE);\n      }\n\n      this.instantRemoveState = [];\n      this.clearLetterTimeout = setTimeout(this.clearLetterAnswers.bind(this), 4400);\n    };\n  }\n\n  return new Screen();\n}();\n\nwindow.controller = controller;\n\n},{\"virtual-scroll\":12}],2:[function(require,module,exports){\n'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n},{}],4:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":2,\"ieee754\":8,\"isarray\":5}],5:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n(function (Buffer){\nvar clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":4}],7:[function(require,module,exports){\nvar clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};\n},{\"clone\":6}],8:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],9:[function(require,module,exports){\n// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n\n},{}],10:[function(require,module,exports){\nfunction E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n\n},{\"./clone\":11,\"./support\":13,\"bindall-standalone\":3,\"defaults\":7,\"lethargy\":9,\"tiny-emitter\":10}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();\n},{}]},{},[1])\n\n","import vs from 'virtual-scroll';\n\nvar controller;\n\n(function(){\n  'use strict';\n  var minTimeout = 200;\n  var maxTimeout = 1700;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  // Try to load page as quickly as possible if fonts/content loaded\n  setTimeout(function() {\n\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if ( htmlClass.indexOf('wf-active') !== -1 ) {\n      fontLoaded = true;\n    }\n    if ( domLoaded && fontLoaded ) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  // If unable to load above, loadHome() regardless after maxTimeout is reached\n  setTimeout(function(){\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener('DOMContentLoaded', function() {\n\n    domLoaded = true;\n\n    if ( stillNeedToLoad ) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n\n  });\n\n})();\n\ncontroller = (function(){\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById('slide-number');\n    this.slideNumberTotalEle = document.getElementById('slide-number-total');\n    this.allScreens = [].slice.call(document.querySelectorAll('.screen'));\n    this.app = document.getElementById('app');\n    this.scrollType = this.app.getAttribute('data-scroll') || 'screens';\n    this.scrollSettings = {\n      slide : 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0\n    };\n    this.working = false;\n    this.resizingScreenTimeout = null;\n    this.vScroll = null;\n    this.screens = {\n      loading : document.querySelector('.loader')\n    };\n    this.backgrounds = {\n      home: document.querySelector('.video-home'),\n      ottoform: document.querySelector('.video-ottoform'),\n      frnkrok: document.querySelector('.video-frnkrok'),\n      jlv3: document.querySelector('.video-jlv3'),\n      juiced: document.querySelector('.video-juiced')\n    };\n    this.menu = document.querySelector('.screen--menu');\n    this.menuContainer = document.getElementById('jl-menu');\n    this.writings = document.getElementById('writings-list');\n    this.writingsContainer = document.getElementById('writings-container');\n    this.writingBlock = document.getElementById('writing-block');\n    this.leftScreenPane = document.getElementById('left-screen-pane');\n    this.writingProgressLoader = document.getElementById('writing-progress-bar');\n\n    this.menuOpen = false;\n\n\n    /**\n    * Binds each screen loaded from this.allScreens to the screens object\n    * for later use\n    *\n    * @param slide - Object - the dom slide object\n    */\n    this.bindScreens = function(slide){\n      var key = slide.getAttribute('data-screen');\n      if ( key ) {\n        this.screens[key] = slide;\n      }\n    };\n\n    // runs bindScreens();\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n    // Helper function grab the keys of this.screens\n    this.screenKeys = Object.keys( this.screens );\n\n\n\n\n    /** Touch Event Listener Function\n    *\n    * Acts as a helper to reach the slide function upon a touch event from  a\n    * touch device.\n    *\n    * @param e - Event - the touch event\n    */\n    this.slideTouchEvent = function(e){\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if ( e.type === 'touchmove' && this.scrollSettings.pos ) {\n        e.preventDefault();\n        var _scrollDelta = ( this.scrollSettings.pos - e.touches[0].clientY ) * 2;\n        if ( _scrollDelta > 10 ) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if ( _scrollDelta < -10 ) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function(evt) {\n      if (!evt) evt = event;\n      var w=evt.wheelDelta, d=evt.detail;\n      if (d){\n        if (w) return w/d/40*d>0?1:-1; // Opera\n        else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n      else {\n        return -evt.deltaY/15;\n      }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    * @param touchDelta - event - a touch event\n    */\n    this.slide = function(e, touchDelta) {\n\n      if ( this.working ) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function(evt) {\n        return (evt.detail<0) ? 1 : (evt.wheelDelta>0) ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function(evt){\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if ( touchDelta ) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if ( _distance <= 0.25 && _distance >= -0.25 ) {\n        this.working = true;\n        setTimeout(function(){\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if ( _direction === -1 ) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = ( _screenOn === this.screenKeys.length  ) ? 1 : _screenOn; // fix later remove static num\n      } else if ( _direction === 1 ) {\n        // decrease screen\n        _screenOn = this.scrollSettings.slide - 1;\n        _screenOn = ( _screenOn <= 0 ) ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n      }\n\n      _keyTo = this.screenKeys[_screenOn];\n      this.toggle(_keyFrom, _keyTo);\n\n    };\n\n\n\n    this.toggle = function(from, to) {\n\n      if ( this.menuOpen === true ) {\n        this.working = false;\n        return false;\n      }\n\n      this.screens.home.classList.remove('active');\n\n      this.screens[from].classList.remove('slide-in');\n      this.screens[from].classList.remove('fade-out');\n      this.screens[from].classList.add('slide-out');\n\n      this.screens[to].classList.add('slide-in');\n      this.screens[to].classList.remove('slide-out');\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for(var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\\'number\\'>' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove('slide-out');\n        }\n        _slideCount++;\n      }\n\n      if ( this.backgrounds[from] ) {\n        this.backgrounds[from].setAttribute('data-enable', 'false');\n      }\n\n      if ( this.backgrounds[to] ) {\n        this.backgrounds[to].setAttribute('data-enable', 'true');\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function(){\n        that.working = false;\n      }, 1350);\n\n    };\n\n\n\n    this.openMenu = function() {\n\n      this.menu.classList.remove('fade-out-slow');\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.add('fade-out-slow');\n      }\n\n      this.menu.classList.add('fade-in');\n      this.menuOpen = true;\n      this.menuContainer.classList.add('activate');\n\n    };\n\n    this.closeMenu = function() {\n\n      this.menu.classList.remove('fade-in');\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.remove('fade-out-slow');\n      }\n\n      this.menu.classList.remove('fade-in');\n      this.menu.classList.add('fade-out-slow');\n      this.menuOpen = false;\n      this.menuContainer.classList.remove('activate');\n\n\n    };\n\n    this.toggleMenu = function() {\n      if ( this.menuOpen ) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n\n    this.resize = function() {\n      clearTimeout(this.resizingScreenTimeout);\n      var that = this;\n      this.resizingScreenTimeout = setTimeout(function(){\n        that.virtualScroll(true);\n      }, 100);\n    };\n\n    var currentY = 0, ease = 0.1;\n    var currentYBG = 0, easeBG = 0.085;\n    var targetY = 0;\n    var rAF;\n\n\n    /** this.virtualScroll\n    * Creates the virtual scroll instance\n    *\n    * @param boolean destroy - if true fires .off() method on vScroll and mututates\n    * object into a new vs instance.\n    */\n    this.virtualScroll = function(destroy) {\n\n      if ( destroy ) {\n        targetY = currentY;\n        this.vScroll.off();\n        window.cancelAnimationFrame(rAF);\n      }\n\n      this.vScroll = new vs({firefoxMultiplier: 25});\n      var section = document.getElementById('scroll-section');\n      var sectionBG = document.getElementById('scroll-section-background');\n      var sectionHeight = section.getBoundingClientRect().height;\n\n      var actPoints = [];\n      var actPointEles = [].slice.call(document.querySelectorAll('[data-actpoint]'));\n      for(var x = 0; x < actPointEles.length; x++ ) {\n        let _actPoint = actPointEles[x];\n        let _actPointAction = _actPoint.getAttribute('data-actpoint') || null;\n        if ( _actPointAction ){\n          var action = JSON.parse(_actPointAction);\n          var _offset = _actPoint.offsetTop - window.innerHeight;\n          if ( action ) {\n            var actionKey = Object.keys(action);\n            let ele = document.querySelector(action[actionKey[0]]);\n            if ( ele ) {\n              actPoints.push({ point : _offset, class : actionKey[0], element : ele });\n            }\n          }\n        }\n      }\n\n      this.vScroll.on(function(e) {\n        targetY += e.deltaY;\n        targetY = Math.max( (sectionHeight - window.innerHeight) * -1, targetY);\n        targetY = Math.min(0, targetY);\n      });\n\n\n      var run = function() {\n\n        rAF = requestAnimationFrame(run);\n\n        currentY += Math.round( (targetY - currentY) * ease, 2);\n        currentYBG += Math.round( (targetY - currentYBG) * easeBG, 2);\n\n        for (let x = 0; x < actPoints.length; x++ ) {\n\n          let ap = actPoints[x];\n          let point = ap.point * -1;\n          let classAdd = ap.class;\n          let ele = ap.element;\n\n          if ( currentY < point ) {\n            ele.classList.add(classAdd);\n          } else {\n            ele.classList.remove(classAdd);\n          }\n        }\n\n        var t = 'translateY(' + currentY + 'px)';\n        var s = section.style;\n        s['transform'] = t;\n        s['webkitTransform'] = t;\n        s['mozTransform'] = t;\n        s['msTransform'] = t;\n\n        var tB = 'translateY(' + currentYBG + 'px)';\n        var sB = sectionBG.style;\n        sB['transform'] = tB;\n        sB['webkitTransform'] = tB;\n        sB['mozTransform'] = tB;\n        sB['msTransform'] = tB;\n\n\n      };\n\n      run();\n\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function() {\n\n      this.screens.loading.classList.add('out');\n      this.screens.home.classList.add('active');\n\n      if ( this.slideNumberTotalEle ) {\n\n        this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n        \n      }\n\n      if ( this.scrollType === 'screens' ) {\n\n        document.body.addEventListener('wheel', this.slide.bind(this));\n        document.body.addEventListener('touchstart', this.slideTouchEvent.bind(this));\n        document.body.addEventListener('touchmove', this.slideTouchEvent.bind(this));\n\n      }\n\n      if ( this.scrollType === 'smooth' ) {\n\n        const isParentWritingBlock = function(target, treeDepth) {\n          treeDepth = treeDepth || 0;\n          if (treeDepth > 6) {\n            treeDepth = 0;\n            return false;\n          }\n          if ( !target.parentNode ) return false;\n          return (target.id !== 'writing-block') ? isParentWritingBlock(target.parentNode, ++treeDepth) : true ;\n        };\n\n        document.addEventListener('touchmove', function(e) {\n          if ( e.target && !isParentWritingBlock(e.target))\n            e.preventDefault();\n        });\n\n        window.addEventListener('resize', this.resize.bind(this));\n\n        this.virtualScroll();\n\n      }\n\n      if ( this.writings ) {\n        // intercept links\n        var links = this.writings.querySelectorAll('a');\n        var writingLinks = [].slice.call(links);\n        var that = this;\n        writingLinks.forEach(function(link) {\n          link.addEventListener('click', function(e){\n            that.writingLink(e, this);\n          });\n        });\n        window.onpopstate = this.updateReaderOnPop.bind(this);\n      }\n\n    };\n\n    this.openReaderPane = function() {\n      this.leftScreenPane.classList.add('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'true');\n    };\n\n    this.closeReaderPane = function() {\n      this.leftScreenPane.classList.remove('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'false');\n      window.document.title =  'Joey Lea - Writings';\n\n    };\n\n    this.updateReaderOnPop = function(e) {\n      if ( e.state && e.state.reading && e.state.reading !== 'none' )\n        this.writingLink(null,null,e.state.reading);\n      else\n        this.closeReaderPane();\n    };\n\n    this.closeReader = function() {\n      this.closeReaderPane();\n      var stateObj = { reading: null };\n      history.pushState(stateObj, 'Joey Lea- Writings', '/writings/');\n\n    };\n\n    this.writingLink = function(e, link, location) {\n\n      if (e)\n        e.preventDefault();\n\n      this.writingBlock.style.display = 'none';\n\n      this.writingProgressLoader.className = 'progress-bar';\n\n      this.openReaderPane();\n\n      var _location;\n      if ( location ) {\n        _location = location;\n      }\n      else{\n        _location = link.href;\n      }\n\n      var httpRequest = new XMLHttpRequest();\n\n      if (!httpRequest) {\n        return false;\n      }\n\n      const showWriting = function(){\n        if ( httpRequest.readyState === XMLHttpRequest.DONE ) {\n          if ( httpRequest.status === 200 )\n          {\n            if ( link ) {\n              var stateObj = { reading: _location };\n              history.pushState(stateObj, 'Joey Lea- Writings', _location);\n            }\n            var doc = document.implementation.createHTMLDocument('writing-doc');\n            doc.documentElement.innerHTML = httpRequest.responseText;\n            var html = doc.getElementById('writing-block');\n            this.writingBlock.innerHTML = html.innerHTML;\n            this.writingBlock.style.display = 'block';\n            this.writingProgressLoader.classList.add('finish');\n            this.writingBlock.scrollTop = 0;\n            window.document.title = doc.title || 'Joey Lea - Writings';\n            targetY = 0;\n\n          } else {\n            this.writingBlock.innerHTML = 'Something went wrong';\n          }\n        }\n      };\n\n      this.writingProgressLoader.classList.add('start');\n      httpRequest.onreadystatechange = showWriting.bind(this);\n      httpRequest.open('GET', _location);\n      httpRequest.send();\n\n\n    };\n\n\n    this.clearLetterTimeout = null;\n    this.removeLettersState = [];\n    this.instantRemoveState = [];\n    this.clearLetterAnswers = function(instantRemove) {\n\n      var removeSet;\n\n      if ( instantRemove ) {\n        removeSet = instantRemove;\n      } else {\n        removeSet = this.removeLettersState;\n        this.instantRemoveState = [];\n        this.removeLettersState = [];\n      }\n\n      removeSet.forEach(function(e) {\n        e.classList.remove('active');\n        e.style.left = e.getAttribute('data-left');\n\n      });\n\n\n\n    };\n\n    this.revealLetterAnswers = function(ele){\n\n      clearTimeout(this.clearLetterTimeout);\n\n      this.instantRemoveState = this.removeLettersState;\n      if ( this.instantRemoveState.length > 0 ) {\n        this.clearLetterAnswers(this.instantRemoveState);\n      }\n\n      var answer = ele.getAttribute('data-answer');\n      var answers = answer.split(',');\n\n      for ( var x = 0; x < answers.length; x++ ) {\n        var _activateE = document.querySelector('.' + answers[x]);\n        _activateE.setAttribute('data-left', _activateE.style.left);\n        var _size = Math.min((window.innerWidth / 18), 55);\n        var _left = (x * _size) + 'px';\n        _activateE.classList.add('active');\n        _activateE.style.left = _left;\n        this.removeLettersState.push(_activateE);\n\n      }\n\n      this.instantRemoveState = [];\n      this.clearLetterTimeout = setTimeout(this.clearLetterAnswers.bind(this), 4400);\n\n    };\n\n  }\n\n  return new Screen();\n\n})();\n\nwindow.controller = controller;\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","var clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n","function E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};","'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n","'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();"],"sourceRoot":"/source/"}