{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jl.js","js/jl.js","node_modules/base64-js/lib/b64.js","node_modules/bindall-standalone/index.js","node_modules/buffer/index.js","node_modules/buffer/node_modules/isarray/index.js","node_modules/clone/clone.js","node_modules/defaults/index.js","node_modules/ieee754/index.js","node_modules/lethargy/lethargy.js","node_modules/tiny-emitter/index.js","node_modules/virtual-scroll/src/clone.js","node_modules/virtual-scroll/src/index.js","node_modules/virtual-scroll/src/support.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","_virtualScroll","_virtualScroll2","minTimeout","maxTimeout","domLoaded","stillNeedToLoad","fontLoaded","setTimeout","htmlClass","slice","document","documentElement","classList","indexOf","controller","loadHome","window","addEventListener","event","handleOrientation","scrollTo","Screen","this","slideNumberEle","getElementById","slideNumberTotalEle","allScreens","querySelectorAll","app","scrollType","getAttribute","scrollSettings","slide","timeout","videoTimeout","pos","distance","timeEase","scrollers","rafStarted","rAFStart","working","screens","loading","querySelector","bindScreens","key","forEach","bind","menu","menuContainer","menuOpen","screenKeys","Object","keys","backgrounds","home","ottoform","frnkrok","jlv3","juiced","slideTouchEvent","type","touches","clientY","preventDefault","_scrollDelta","direction","wheelDistance","evt","w","wheelDelta","d","detail","deltaY","touchDelta","_direction","_distance","returnWheelDirection","that","returnWheelDistance","_screenOn","_keyTo","_keyFrom","toggle","from","to","remove","add","_slideCount","screen","innerHTML","setAttribute","scroll","scrollDistance","Math","min","performance","now","requestAnimationFrame","rAF","easeInOutQuad","b","c","undefined","timestamp","_timeTo","easeOutQuad","speedFactor","currentPoint","parseInt","speed","destinationPoint","ease","round","max","up","style","webkitTransform","MozTransform","msTransform","OTransform","transform","openMenu","closeMenu","toggleMenu","addSmoothScrollers","smooths","push","innerText","body","VirtualScroll","targetY","section","sectionHeight","getBoundingClientRect","height","on","innerHeight","currentY","run","virtual-scroll",2,"init","len","lookup","revLookup","charCodeAt","toByteArray","b64","j","tmp","placeHolders","arr","Arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array",3,"func","context","apply","arguments","toString","prototype","hasOwnProperty","object","console","warn","functions","method",4,"global","typedArraySupport","foo","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","write","fromArrayLike","array","byteOffset","isBuffer","copy","buffer","isnan","isArray","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","swap","m","arrayIndexOf","val","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","hexWrite","offset","Number","remaining","strLen","parsed","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","swap16","swap32","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","self","base64-js","isarray",5,6,"clone","parent","circular","depth","_clone","child","proto","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","useBuffer","getPrototypeOf","create","index","allParents","allChildren","attrs","getOwnPropertyDescriptor","filter","__objToStr","re","flags","ignoreCase","multiline","clonePrototype",7,"options","defaults",8,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2",9,"root","Lethargy","stability","sensitivity","tolerance","delay","lastUpDeltas","ref","results","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","shift","isInertia","lastDeltas","lastDeltasNew","lastDeltasOld","newAverage","newSum","oldAverage","oldSum","reduce","showLastUpDeltas","showLastDownDeltas",10,"E","name","callback","ctx","fn","once","listener","off","_","emit","evtArr","evts","liveEvents",11,"JSON","parse","stringify",12,"bindAll","mouseMultiplier","touchMultiplier","firefoxMultiplier","keyStep","preventTouch","unpreventTouchClass","limitInertia","_lethargy","_emitter","Emitter","_event","deltaX","touchStartX","touchStartY","bodyTouchAction","support","EVT_ID","keyCodes","LEFT","UP","RIGHT","DOWN","_notify","_onWheel","wheelDeltaX","wheelDeltaY","isFirefox","deltaMode","_onMouseWheel","_onTouchStart","targetTouches","pageX","pageY","_onTouchMove","contains","_onKeyDown","keyCode","_bind","hasWheelEvent","hasMouseWheelEvent","hasTouch","hasPointer","hasTouchWin","msTouchAction","hasKeyDown","_unbind","removeEventListener","cb","events","reset","destroy","./clone","./support","bindall-standalone","lethargy","tiny-emitter",13,"navigator","msMaxTouchPoints","msPointerEnabled","userAgent"],"mappings":"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","file":"jl.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _virtualScroll = require('virtual-scroll');\n\nvar _virtualScroll2 = _interopRequireDefault(_virtualScroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// const section = document.querySelector('#about-me-intro-text');\n// const smooth = new Smooth({\n//   native: false,\n//   section: section,\n//   ease: 0.1\n// });\n//\n// smooth.init();\n// smooth.on();\n// console.log(smooth);\n(function () {\n  'use strict';\n\n  var minTimeout = 400;\n  var maxTimeout = 2200;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  setTimeout(function () {\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if (htmlClass.indexOf(\"wf-active\") !== -1) {\n      fontLoaded = true;\n    }\n    if (domLoaded && fontLoaded) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  setTimeout(function () {\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener(\"DOMContentLoaded\", function (event) {\n\n    domLoaded = true;\n\n    if (stillNeedToLoad) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n  });\n\n  window.handleOrientation = function (e) {\n    setTimeout(function () {\n      // Hide the address bar!\n      window.scrollTo(0, 1);\n    }, 0);\n  };\n\n  window.addEventListener(\"load\", handleOrientation, false);\n\n  window.addEventListener(\"deviceorientation\", handleOrientation, true);\n})();\n\nwindow.controller = function () {\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById(\"slide-number\");\n    this.slideNumberTotalEle = document.getElementById(\"slide-number-total\");\n    this.allScreens = [].slice.call(document.querySelectorAll(\".screen\"));\n\n    this.app = document.getElementById(\"app\");\n    this.scrollType = this.app.getAttribute(\"data-scroll\") || \"screens\";\n    this.scrollSettings = {\n      slide: 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0,\n      timeEase: 0,\n      scrollers: [],\n      rafStarted: false\n    };\n    this.rAFStart = null;\n    this.working = false;\n    this.screens = {\n      loading: document.querySelector(\".loader\")\n    };\n\n    // home : document.querySelector(\".screen--home\"),\n    // ottoform: document.querySelector(\".screen--ottoform\"),\n    // frnkrok: document.querySelector(\".screen--frnkrok\"),\n    // jlv3: document.querySelector(\".screen--jlv3\"),\n    // juiced: document.querySelector(\".screen--juiced\"),\n\n    this.bindScreens = function (slide) {\n      var key = slide.getAttribute(\"data-screen\");\n      if (key) {\n        this.screens[key] = slide;\n      }\n    };\n\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n    this.menu = document.querySelector(\".screen--menu\");\n    this.menuContainer = document.getElementById(\"jl-menu\");\n    this.menuOpen = false;\n\n    this.screenKeys = Object.keys(this.screens);\n\n    this.backgrounds = {\n      home: document.querySelector(\".video-home\"),\n      ottoform: document.querySelector(\".video-ottoform\"),\n      frnkrok: document.querySelector(\".video-frnkrok\"),\n      jlv3: document.querySelector(\".video-jlv3\"),\n      juiced: document.querySelector(\".video-juiced\")\n    };\n\n    /* Touch event function */\n    this.slideTouchEvent = function (e) {\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if (e.type === 'touchmove' && this.scrollSettings.pos) {\n        e.preventDefault();\n        var _scrollDelta = (this.scrollSettings.pos - e.touches[0].clientY) * 2;\n        if (_scrollDelta > 10) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if (_scrollDelta < -10) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function (evt) {\n      if (!evt) evt = event;\n      var w = evt.wheelDelta,\n          d = evt.detail;\n      if (d) {\n        if (w) return w / d / 40 * d > 0 ? 1 : -1; // Opera\n        else return -d / 3; // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w / 120; // IE/Safari/Chrome TODO: /3 for Chrome OS X\n        else {\n            return -evt.deltaY / 15;\n          }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    */\n    this.slide = function (e, touchDelta) {\n\n      if (this.working) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function returnWheelDirection(evt) {\n        return evt.detail < 0 ? 1 : evt.wheelDelta > 0 ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function returnWheelDistance(evt) {\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if (touchDelta) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if (_distance <= 0.25 && _distance >= -0.25) {\n        this.working = true;\n        setTimeout(function () {\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      // var _deltaY = e.deltaY;\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if (_direction === -1) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = _screenOn === this.screenKeys.length ? 1 : _screenOn; // fix later remove static num\n      } else if (_direction === 1) {\n          // decrease screen\n          _screenOn = this.scrollSettings.slide - 1;\n          _screenOn = _screenOn <= 0 ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n        }\n\n      _keyTo = this.screenKeys[_screenOn];\n\n      this.toggle(_keyFrom, _keyTo);\n    };\n\n    this.toggle = function (from, to) {\n\n      if (this.menuOpen === true) {\n        this.working = false;\n        return false;\n      }\n\n      window.handleOrientation();\n\n      this.screens.home.classList.remove(\"active\");\n\n      this.screens[from].classList.remove(\"slide-in\");\n      this.screens[from].classList.remove(\"fade-out\");\n      this.screens[from].classList.add(\"slide-out\");\n\n      this.screens[to].classList.add(\"slide-in\");\n      this.screens[to].classList.remove(\"slide-out\");\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for (var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\"number\">' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove(\"slide-out\");\n        }\n        _slideCount++;\n      }\n\n      if (this.backgrounds[from]) {\n        this.backgrounds[from].setAttribute(\"data-enable\", \"false\");\n      }\n\n      if (this.backgrounds[to]) {\n        this.backgrounds[to].setAttribute(\"data-enable\", \"true\");\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function () {\n        that.working = false;\n      }, 1500);\n    };\n\n    this.scroll = function (e) {\n\n      var scrollDistance = this.wheelDistance(e);\n      var _distance = this.scrollSettings.distance + scrollDistance;\n      this.scrollSettings.distance = Math.min(0, _distance);\n      this.scrollSettings.timeEase = performance.now() + 400;\n\n      if (!this.scrollSettings.rafStarted) {\n        window.requestAnimationFrame(this.rAF.bind(this));\n      }\n    };\n\n    this.easeInOutQuad = function (t, b, c, d, s) {\n      if (s === undefined) s = 1.70158;\n      return c * (t /= d) * t + b;\n    };\n\n    this.rAF = function (timestamp) {\n\n      this.scrollSettings.rafStarted = true;\n\n      if (!this.rAFStart) this.rAFStart = timestamp;\n      var progress = timestamp - this.rAFStart;\n      var _distance = this.scrollSettings.distance;\n      var _timeTo = this.scrollSettings.timeEase;\n      var easeOutQuad = this.easeInOutQuad;\n      var speedFactor = 45;\n\n      this.scrollSettings.scrollers.forEach(function (s) {\n\n        var currentPoint = parseInt(s.getAttribute(\"data-scrolled\")) || 0;\n        var speed = (parseInt(s.getAttribute(\"data-ss\")) || 1) * speedFactor;\n        var destinationPoint = _distance * speed;\n        var ease = Math.round(easeOutQuad(timestamp, currentPoint, destinationPoint - currentPoint, _timeTo));\n        ease = Math.max(destinationPoint, ease);\n        // console.log(currentPoint, destinationPoint, ease);\n        // magicPoint += ease;\n        // magicPoint = ( magicPoint < 0 ) ? magicPoint : 0;\n        // ease = ( ease < 0 ) ? ease : 0;\n\n        var up = ease + 'px';\n        s.style.webkitTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.MozTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.msTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.OTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.transform = 'translateY(' + up + ') translateZ(0)';\n        s.setAttribute(\"data-scrolled\", destinationPoint);\n      });\n\n      // recall rAF\n      window.requestAnimationFrame(this.rAF.bind(this));\n    };\n\n    this.openMenu = function () {\n\n      this.menu.classList.remove(\"fade-out-slow\");\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.add(\"fade-out-slow\");\n      }\n\n      this.menu.classList.add(\"fade-in\");\n      this.menuOpen = true;\n      this.menuContainer.classList.add(\"activate\");\n    };\n\n    this.closeMenu = function () {\n\n      this.menu.classList.remove(\"fade-in\");\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.remove(\"fade-out-slow\");\n      }\n\n      this.menu.classList.remove(\"fade-in\");\n      this.menu.classList.add(\"fade-out-slow\");\n      this.menuOpen = false;\n      this.menuContainer.classList.remove(\"activate\");\n    };\n\n    this.toggleMenu = function () {\n      if (this.menuOpen) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n    this.addSmoothScrollers = function () {\n      var smooths = [].slice.call(document.querySelectorAll(\".scroller\"));\n      var that = this;\n      smooths.forEach(function (s) {\n        that.scrollSettings.scrollers.push(s);\n      });\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function () {\n\n      this.screens.loading.classList.add(\"out\");\n      this.screens.home.classList.add(\"active\");\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n\n      if (this.scrollType === \"screens\") {\n\n        document.body.addEventListener(\"wheel\", this.slide.bind(this));\n        document.body.addEventListener(\"touchstart\", this.slideTouchEvent.bind(this));\n        document.body.addEventListener(\"touchmove\", this.slideTouchEvent.bind(this));\n      }\n\n      if (this.scrollType === \"smooth\") {\n        // this.addSmoothScrollers();\n        // document.body.addEventListener(\"wheel\", this.scroll.bind(this));\n\n        var VirtualScroll = new _virtualScroll2.default();\n        var targetY = 0;\n        var section = document.getElementById(\"about-me-scroll\");\n        var sectionHeight = section.getBoundingClientRect().height;\n\n        VirtualScroll.on(function (e) {\n          targetY += e.deltaY;\n          targetY = Math.max((sectionHeight - window.innerHeight) * -1, targetY);\n          targetY = Math.min(0, targetY);\n        });\n\n        var currentY = 0,\n            ease = 0.11;\n        var run = function run() {\n          requestAnimationFrame(run);\n          currentY += Math.round((targetY - currentY) * ease, 2);\n          var t = 'translateY(' + currentY + 'px) translateZ(0)';\n          var s = section.style;\n          s[\"transform\"] = t;\n          s[\"webkitTransform\"] = t;\n          s[\"mozTransform\"] = t;\n          s[\"msTransform\"] = t;\n        };\n\n        run();\n      }\n    };\n  }\n\n  return new Screen();\n}();\n\n},{\"virtual-scroll\":12}],2:[function(require,module,exports){\n'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n},{}],4:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":2,\"ieee754\":8,\"isarray\":5}],5:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n(function (Buffer){\nvar clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":4}],7:[function(require,module,exports){\nvar clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};\n},{\"clone\":6}],8:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],9:[function(require,module,exports){\n// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n\n},{}],10:[function(require,module,exports){\nfunction E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n\n},{\"./clone\":11,\"./support\":13,\"bindall-standalone\":3,\"defaults\":7,\"lethargy\":9,\"tiny-emitter\":10}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();\n},{}]},{},[1])\n\n","import vs from 'virtual-scroll';\n\n\n// const section = document.querySelector('#about-me-intro-text');\n// const smooth = new Smooth({\n//   native: false,\n//   section: section,\n//   ease: 0.1\n// });\n//\n// smooth.init();\n// smooth.on();\n// console.log(smooth);\n(function(){\n  'use strict';\n  var minTimeout = 400;\n  var maxTimeout = 2200;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  setTimeout(function(){\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if ( htmlClass.indexOf(\"wf-active\") !== -1 ) {\n      fontLoaded = true;\n    }\n    if ( domLoaded && fontLoaded ) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  setTimeout(function(){\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    domLoaded = true;\n\n    if ( stillNeedToLoad ) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n\n  });\n\n  window.handleOrientation = function(e){\n    setTimeout(function(){\n      // Hide the address bar!\n      window.scrollTo(0, 1);\n    }, 0);\n  };\n\n  window.addEventListener(\"load\", handleOrientation, false);\n\n  window.addEventListener(\"deviceorientation\", handleOrientation, true);\n\n})();\n\nwindow.controller = (function(){\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById(\"slide-number\");\n    this.slideNumberTotalEle = document.getElementById(\"slide-number-total\");\n    this.allScreens = [].slice.call(document.querySelectorAll(\".screen\"));\n\n    this.app = document.getElementById(\"app\");\n    this.scrollType = this.app.getAttribute(\"data-scroll\") || \"screens\";\n    this.scrollSettings = {\n      slide : 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0,\n      timeEase: 0,\n      scrollers: [],\n      rafStarted: false,\n    };\n    this.rAFStart = null;\n    this.working = false;\n    this.screens = {\n      loading : document.querySelector(\".loader\"),\n      // home : document.querySelector(\".screen--home\"),\n      // ottoform: document.querySelector(\".screen--ottoform\"),\n      // frnkrok: document.querySelector(\".screen--frnkrok\"),\n      // jlv3: document.querySelector(\".screen--jlv3\"),\n      // juiced: document.querySelector(\".screen--juiced\"),\n\n    };\n\n    this.bindScreens = function(slide){\n      var key = slide.getAttribute(\"data-screen\");\n      if ( key ) {\n        this.screens[key] = slide;\n      }\n    };\n\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n\n    this.menu = document.querySelector(\".screen--menu\");\n    this.menuContainer = document.getElementById(\"jl-menu\");\n    this.menuOpen = false;\n\n    this.screenKeys = Object.keys( this.screens );\n\n    this.backgrounds = {\n      home: document.querySelector(\".video-home\"),\n      ottoform: document.querySelector(\".video-ottoform\"),\n      frnkrok: document.querySelector(\".video-frnkrok\"),\n      jlv3: document.querySelector(\".video-jlv3\"),\n      juiced: document.querySelector(\".video-juiced\"),\n    };\n\n    /* Touch event function */\n    this.slideTouchEvent = function(e){\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if ( e.type === 'touchmove' && this.scrollSettings.pos ) {\n        e.preventDefault();\n        var _scrollDelta = ( this.scrollSettings.pos - e.touches[0].clientY ) * 2;\n        if ( _scrollDelta > 10 ) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if ( _scrollDelta < -10 ) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function(evt) {\n      if (!evt) evt = event;\n      var w=evt.wheelDelta, d=evt.detail;\n      if (d){\n        if (w) return w/d/40*d>0?1:-1; // Opera\n        else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n      else {\n        return -evt.deltaY/15;\n      }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    */\n    this.slide = function(e, touchDelta) {\n\n      if ( this.working ) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function(evt) {\n         return (evt.detail<0) ? 1 : (evt.wheelDelta>0) ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function(evt){\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if ( touchDelta ) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if ( _distance <= 0.25 && _distance >= -0.25 ) {\n        this.working = true;\n        setTimeout(function(){\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      // var _deltaY = e.deltaY;\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if ( _direction === -1 ) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = ( _screenOn === this.screenKeys.length  ) ? 1 : _screenOn; // fix later remove static num\n      } else if ( _direction === 1 ) {\n        // decrease screen\n        _screenOn = this.scrollSettings.slide - 1;\n        _screenOn = ( _screenOn <= 0 ) ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n      }\n\n      _keyTo = this.screenKeys[_screenOn];\n\n      this.toggle(_keyFrom, _keyTo);\n\n    };\n\n\n\n    this.toggle = function(from, to) {\n\n      if ( this.menuOpen === true ) {\n        this.working = false;\n        return false;\n      }\n\n      window.handleOrientation();\n\n      this.screens.home.classList.remove(\"active\");\n\n      this.screens[from].classList.remove(\"slide-in\");\n      this.screens[from].classList.remove(\"fade-out\");\n      this.screens[from].classList.add(\"slide-out\");\n\n      this.screens[to].classList.add(\"slide-in\");\n      this.screens[to].classList.remove(\"slide-out\");\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for(var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\"number\">' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove(\"slide-out\");\n        }\n        _slideCount++;\n      }\n\n      if ( this.backgrounds[from] ) {\n        this.backgrounds[from].setAttribute(\"data-enable\", \"false\");\n      }\n\n      if ( this.backgrounds[to] ) {\n        this.backgrounds[to].setAttribute(\"data-enable\", \"true\");\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function(){\n        that.working = false;\n      }, 1500);\n\n    };\n\n\n    this.scroll  = function(e) {\n\n      var scrollDistance = this.wheelDistance(e);\n      var _distance = this.scrollSettings.distance + scrollDistance;\n      this.scrollSettings.distance = Math.min(0,_distance);\n      this.scrollSettings.timeEase = performance.now() + 400;\n\n      if ( !this.scrollSettings.rafStarted ) {\n        window.requestAnimationFrame(this.rAF.bind(this));\n      }\n\n    };\n\n    this.easeInOutQuad = function (t, b, c, d, s) {\n        if (s === undefined) s = 1.70158;\n        return c*(t/=d)*t + b;\n    };\n\n    this.rAF = function(timestamp) {\n\n      this.scrollSettings.rafStarted = true;\n\n      if (!this.rAFStart) this.rAFStart = timestamp;\n      var progress = timestamp - this.rAFStart;\n      var _distance = this.scrollSettings.distance;\n      var _timeTo = this.scrollSettings.timeEase;\n      var easeOutQuad = this.easeInOutQuad;\n      var speedFactor = 45;\n\n      this.scrollSettings.scrollers.forEach(function(s) {\n\n\n\n        var currentPoint = parseInt(s.getAttribute(\"data-scrolled\")) || 0;\n        var speed = (parseInt(s.getAttribute(\"data-ss\")) || 1) * speedFactor;\n        var destinationPoint = ( _distance ) * speed;\n        var ease = Math.round(easeOutQuad(timestamp, currentPoint, (destinationPoint - currentPoint), _timeTo));\n        ease = Math.max(destinationPoint,ease);\n        // console.log(currentPoint, destinationPoint, ease);\n        // magicPoint += ease;\n        // magicPoint = ( magicPoint < 0 ) ? magicPoint : 0;\n        // ease = ( ease < 0 ) ? ease : 0;\n\n        var up = ease  + 'px';\n        s.style.webkitTransform = 'translateY('+up+') translateZ(0)';\n        s.style.MozTransform = 'translateY('+up+') translateZ(0)';\n        s.style.msTransform = 'translateY('+up+') translateZ(0)';\n        s.style.OTransform = 'translateY('+up+') translateZ(0)';\n        s.style.transform = 'translateY('+up+') translateZ(0)';\n        s.setAttribute(\"data-scrolled\", destinationPoint);\n\n      });\n\n      // recall rAF\n      window.requestAnimationFrame(this.rAF.bind(this));\n    };\n\n\n\n    this.openMenu = function() {\n\n      this.menu.classList.remove(\"fade-out-slow\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.add(\"fade-out-slow\");\n      }\n\n      this.menu.classList.add(\"fade-in\");\n      this.menuOpen = true;\n      this.menuContainer.classList.add(\"activate\");\n\n    };\n\n    this.closeMenu = function() {\n\n      this.menu.classList.remove(\"fade-in\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.remove(\"fade-out-slow\");\n      }\n\n      this.menu.classList.remove(\"fade-in\");\n      this.menu.classList.add(\"fade-out-slow\");\n      this.menuOpen = false;\n      this.menuContainer.classList.remove(\"activate\");\n\n\n    };\n\n    this.toggleMenu = function() {\n      if ( this.menuOpen ) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n    this.addSmoothScrollers = function() {\n      var smooths = [].slice.call(document.querySelectorAll(\".scroller\"));\n      var that = this;\n      smooths.forEach(function(s) {\n        that.scrollSettings.scrollers.push(s);\n      });\n    };\n\n\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function() {\n\n      this.screens.loading.classList.add(\"out\");\n      this.screens.home.classList.add(\"active\");\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n\n      if ( this.scrollType === \"screens\" ) {\n\n        document.body.addEventListener(\"wheel\", this.slide.bind(this));\n        document.body.addEventListener(\"touchstart\", this.slideTouchEvent.bind(this));\n        document.body.addEventListener(\"touchmove\", this.slideTouchEvent.bind(this));\n\n      }\n\n      if ( this.scrollType === \"smooth\" ) {\n        // this.addSmoothScrollers();\n        // document.body.addEventListener(\"wheel\", this.scroll.bind(this));\n\n        var VirtualScroll = new vs();\n        var targetY = 0;\n        var section = document.getElementById(\"about-me-scroll\");\n        var sectionHeight = section.getBoundingClientRect().height;\n\n        VirtualScroll.on(function(e) {\n            targetY += e.deltaY;\n            targetY = Math.max( (sectionHeight - window.innerHeight) * -1, targetY);\n            targetY = Math.min(0, targetY);\n        });\n\n        var currentY = 0, ease = 0.11;\n        var run = function() {\n            requestAnimationFrame(run);\n            currentY += Math.round((targetY - currentY) * ease,2);\n            var t = 'translateY(' + currentY + 'px) translateZ(0)';\n            var s = section.style;\n            s[\"transform\"] = t;\n            s[\"webkitTransform\"] = t;\n            s[\"mozTransform\"] = t;\n            s[\"msTransform\"] = t;\n        };\n\n        run();\n\n      }\n\n\n    };\n\n  }\n\n  return new Screen();\n\n})();\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","var clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n","function E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};","'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n","'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();"],"sourceRoot":"/source/"}