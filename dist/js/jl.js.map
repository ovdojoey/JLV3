{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jl.js","js/jl.js","node_modules/base64-js/lib/b64.js","node_modules/bindall-standalone/index.js","node_modules/buffer/index.js","node_modules/buffer/node_modules/isarray/index.js","node_modules/clone/clone.js","node_modules/defaults/index.js","node_modules/ieee754/index.js","node_modules/lethargy/lethargy.js","node_modules/tiny-emitter/index.js","node_modules/virtual-scroll/src/clone.js","node_modules/virtual-scroll/src/index.js","node_modules/virtual-scroll/src/support.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","controller","_virtualScroll","_virtualScroll2","minTimeout","maxTimeout","domLoaded","stillNeedToLoad","fontLoaded","setTimeout","htmlClass","slice","document","documentElement","classList","indexOf","loadHome","window","addEventListener","handleOrientation","scrollTo","Screen","this","slideNumberEle","getElementById","slideNumberTotalEle","allScreens","querySelectorAll","app","scrollType","getAttribute","scrollSettings","slide","timeout","videoTimeout","pos","distance","timeEase","scrollers","rafStarted","rAFStart","working","resizingScreenTimeout","vScroll","screens","loading","querySelector","bindScreens","key","forEach","bind","menu","menuContainer","menuOpen","screenKeys","Object","keys","backgrounds","home","ottoform","frnkrok","jlv3","juiced","slideTouchEvent","type","touches","clientY","preventDefault","_scrollDelta","direction","wheelDistance","evt","event","w","wheelDelta","d","detail","deltaY","touchDelta","_direction","_distance","returnWheelDirection","that","returnWheelDistance","_screenOn","_keyTo","_keyFrom","toggle","from","to","remove","add","_slideCount","screen","innerHTML","setAttribute","scroll","scrollDistance","Math","min","performance","now","requestAnimationFrame","rAF","easeInOutQuad","b","c","undefined","timestamp","_timeTo","easeOutQuad","speedFactor","currentPoint","parseInt","speed","destinationPoint","ease","round","max","up","style","webkitTransform","MozTransform","msTransform","OTransform","transform","openMenu","closeMenu","toggleMenu","addSmoothScrollers","smooths","push","resize","clearTimeout","virtualScroll","currentY","currentYBG","easeBG","targetY","destroy","off","firefoxMultiplier","section","sectionHeight","getBoundingClientRect","height","actPoints","actPointEles","x","_actPoint","_actPointAction","action","JSON","parse","_offset","offsetTop","innerHeight","actionKey","ele","point","class","element","on","run","_x","ap","classAdd","_ele","innerText","body","clearLetterTimeout","removeLettersState","instantRemoveState","clearLetterAnswers","instantRemove","removeSet","left","revealLetterAnswers","answer","answers","split","_activateE","_size","innerWidth","_left","virtual-scroll",2,"init","len","lookup","revLookup","charCodeAt","toByteArray","b64","j","tmp","placeHolders","arr","Arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array",3,"func","context","apply","arguments","toString","prototype","hasOwnProperty","object","console","warn","functions","method",4,"global","typedArraySupport","foo","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","write","fromArrayLike","array","byteOffset","isBuffer","copy","buffer","isnan","isArray","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","swap","m","arrayIndexOf","val","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","hexWrite","offset","Number","remaining","strLen","parsed","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","y","concat","list","swap16","swap32","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","self","base64-js","isarray",5,6,"clone","parent","circular","depth","_clone","child","proto","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","useBuffer","getPrototypeOf","create","index","allParents","allChildren","attrs","getOwnPropertyDescriptor","filter","__objToStr","re","flags","ignoreCase","multiline","clonePrototype",7,"options","defaults",8,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2",9,"root","Lethargy","stability","sensitivity","tolerance","delay","lastUpDeltas","ref","results","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","shift","isInertia","lastDeltas","lastDeltasNew","lastDeltasOld","newAverage","newSum","oldAverage","oldSum","reduce","showLastUpDeltas","showLastDownDeltas",10,"E","name","callback","ctx","fn","once","listener","_","emit","evtArr","evts","liveEvents",11,"stringify",12,"VirtualScroll","bindAll","mouseMultiplier","touchMultiplier","keyStep","preventTouch","unpreventTouchClass","limitInertia","_lethargy","_emitter","Emitter","_event","deltaX","touchStartX","touchStartY","bodyTouchAction","support","EVT_ID","keyCodes","LEFT","UP","RIGHT","DOWN","_notify","_onWheel","wheelDeltaX","wheelDeltaY","isFirefox","deltaMode","_onMouseWheel","_onTouchStart","targetTouches","pageX","pageY","_onTouchMove","contains","_onKeyDown","keyCode","_bind","hasWheelEvent","hasMouseWheelEvent","hasTouch","hasPointer","hasTouchWin","msTouchAction","hasKeyDown","_unbind","removeEventListener","cb","events","reset","./clone","./support","bindall-standalone","lethargy","tiny-emitter",13,"navigator","msMaxTouchPoints","msPointerEnabled","userAgent"],"mappings":"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","file":"jl.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _virtualScroll = require('virtual-scroll');\n\nvar _virtualScroll2 = _interopRequireDefault(_virtualScroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar controller;\n\n(function () {\n  'use strict';\n\n  var minTimeout = 50;\n  var maxTimeout = 2200;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  setTimeout(function () {\n\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if (htmlClass.indexOf('wf-active') !== -1) {\n      fontLoaded = true;\n    }\n    if (domLoaded && fontLoaded) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  setTimeout(function () {\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener('DOMContentLoaded', function () {\n\n    domLoaded = true;\n\n    if (stillNeedToLoad) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n  });\n\n  window.handleOrientation = function () {\n    setTimeout(function () {\n      // Hide the address bar!\n      window.scrollTo(0, 1);\n    }, 0);\n  };\n\n  window.addEventListener('load', handleOrientation, false);\n\n  window.addEventListener(\"deviceorientation\", handleOrientation, true);\n})();\n\ncontroller = function () {\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById(\"slide-number\");\n    this.slideNumberTotalEle = document.getElementById(\"slide-number-total\");\n    this.allScreens = [].slice.call(document.querySelectorAll(\".screen\"));\n\n    this.app = document.getElementById(\"app\");\n    this.scrollType = this.app.getAttribute(\"data-scroll\") || \"screens\";\n    this.scrollSettings = {\n      slide: 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0,\n      timeEase: 0,\n      scrollers: [],\n      rafStarted: false\n    };\n    this.rAFStart = null;\n    this.working = false;\n    this.resizingScreenTimeout = null;\n    this.vScroll = null;\n\n    this.screens = {\n      loading: document.querySelector(\".loader\")\n    };\n\n    // home : document.querySelector(\".screen--home\"),\n    // ottoform: document.querySelector(\".screen--ottoform\"),\n    // frnkrok: document.querySelector(\".screen--frnkrok\"),\n    // jlv3: document.querySelector(\".screen--jlv3\"),\n    // juiced: document.querySelector(\".screen--juiced\"),\n\n    this.bindScreens = function (slide) {\n      var key = slide.getAttribute(\"data-screen\");\n      if (key) {\n        this.screens[key] = slide;\n      }\n    };\n\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n    this.menu = document.querySelector(\".screen--menu\");\n    this.menuContainer = document.getElementById(\"jl-menu\");\n    this.menuOpen = false;\n\n    this.screenKeys = Object.keys(this.screens);\n\n    this.backgrounds = {\n      home: document.querySelector(\".video-home\"),\n      ottoform: document.querySelector(\".video-ottoform\"),\n      frnkrok: document.querySelector(\".video-frnkrok\"),\n      jlv3: document.querySelector(\".video-jlv3\"),\n      juiced: document.querySelector(\".video-juiced\")\n    };\n\n    /* Touch event function */\n    this.slideTouchEvent = function (e) {\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if (e.type === 'touchmove' && this.scrollSettings.pos) {\n        e.preventDefault();\n        var _scrollDelta = (this.scrollSettings.pos - e.touches[0].clientY) * 2;\n        if (_scrollDelta > 10) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if (_scrollDelta < -10) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function (evt) {\n      if (!evt) evt = event;\n      var w = evt.wheelDelta,\n          d = evt.detail;\n      if (d) {\n        if (w) return w / d / 40 * d > 0 ? 1 : -1; // Opera\n        else return -d / 3; // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w / 120; // IE/Safari/Chrome TODO: /3 for Chrome OS X\n        else {\n            return -evt.deltaY / 15;\n          }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    */\n    this.slide = function (e, touchDelta) {\n\n      if (this.working) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function returnWheelDirection(evt) {\n        return evt.detail < 0 ? 1 : evt.wheelDelta > 0 ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function returnWheelDistance(evt) {\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if (touchDelta) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if (_distance <= 0.25 && _distance >= -0.25) {\n        this.working = true;\n        setTimeout(function () {\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      // var _deltaY = e.deltaY;\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if (_direction === -1) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = _screenOn === this.screenKeys.length ? 1 : _screenOn; // fix later remove static num\n      } else if (_direction === 1) {\n          // decrease screen\n          _screenOn = this.scrollSettings.slide - 1;\n          _screenOn = _screenOn <= 0 ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n        }\n\n      _keyTo = this.screenKeys[_screenOn];\n\n      this.toggle(_keyFrom, _keyTo);\n    };\n\n    this.toggle = function (from, to) {\n\n      if (this.menuOpen === true) {\n        this.working = false;\n        return false;\n      }\n\n      window.handleOrientation();\n\n      this.screens.home.classList.remove(\"active\");\n\n      this.screens[from].classList.remove(\"slide-in\");\n      this.screens[from].classList.remove(\"fade-out\");\n      this.screens[from].classList.add(\"slide-out\");\n\n      this.screens[to].classList.add(\"slide-in\");\n      this.screens[to].classList.remove(\"slide-out\");\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for (var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\"number\">' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove(\"slide-out\");\n        }\n        _slideCount++;\n      }\n\n      if (this.backgrounds[from]) {\n        this.backgrounds[from].setAttribute(\"data-enable\", \"false\");\n      }\n\n      if (this.backgrounds[to]) {\n        this.backgrounds[to].setAttribute(\"data-enable\", \"true\");\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function () {\n        that.working = false;\n      }, 1500);\n    };\n\n    this.scroll = function (e) {\n\n      var scrollDistance = this.wheelDistance(e);\n      var _distance = this.scrollSettings.distance + scrollDistance;\n      this.scrollSettings.distance = Math.min(0, _distance);\n      this.scrollSettings.timeEase = performance.now() + 400;\n\n      if (!this.scrollSettings.rafStarted) {\n        window.requestAnimationFrame(this.rAF.bind(this));\n      }\n    };\n\n    this.easeInOutQuad = function (t, b, c, d, s) {\n      if (s === undefined) s = 1.70158;\n      return c * (t /= d) * t + b;\n    };\n\n    this.rAF = function (timestamp) {\n\n      this.scrollSettings.rafStarted = true;\n\n      if (!this.rAFStart) this.rAFStart = timestamp;\n      var progress = timestamp - this.rAFStart;\n      var _distance = this.scrollSettings.distance;\n      var _timeTo = this.scrollSettings.timeEase;\n      var easeOutQuad = this.easeInOutQuad;\n      var speedFactor = 45;\n\n      this.scrollSettings.scrollers.forEach(function (s) {\n\n        var currentPoint = parseInt(s.getAttribute(\"data-scrolled\")) || 0;\n        var speed = (parseInt(s.getAttribute(\"data-ss\")) || 1) * speedFactor;\n        var destinationPoint = _distance * speed;\n        var ease = Math.round(easeOutQuad(timestamp, currentPoint, destinationPoint - currentPoint, _timeTo));\n        ease = Math.max(destinationPoint, ease);\n        // console.log(currentPoint, destinationPoint, ease);\n        // magicPoint += ease;\n        // magicPoint = ( magicPoint < 0 ) ? magicPoint : 0;\n        // ease = ( ease < 0 ) ? ease : 0;\n\n        var up = ease + 'px';\n        s.style.webkitTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.MozTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.msTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.OTransform = 'translateY(' + up + ') translateZ(0)';\n        s.style.transform = 'translateY(' + up + ') translateZ(0)';\n        s.setAttribute(\"data-scrolled\", destinationPoint);\n      });\n\n      // recall rAF\n      window.requestAnimationFrame(this.rAF.bind(this));\n    };\n\n    this.openMenu = function () {\n\n      this.menu.classList.remove(\"fade-out-slow\");\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.add(\"fade-out-slow\");\n      }\n\n      this.menu.classList.add(\"fade-in\");\n      this.menuOpen = true;\n      this.menuContainer.classList.add(\"activate\");\n    };\n\n    this.closeMenu = function () {\n\n      this.menu.classList.remove(\"fade-in\");\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.remove(\"fade-out-slow\");\n      }\n\n      this.menu.classList.remove(\"fade-in\");\n      this.menu.classList.add(\"fade-out-slow\");\n      this.menuOpen = false;\n      this.menuContainer.classList.remove(\"activate\");\n    };\n\n    this.toggleMenu = function () {\n      if (this.menuOpen) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n    this.addSmoothScrollers = function () {\n      var smooths = [].slice.call(document.querySelectorAll(\".scroller\"));\n      var that = this;\n      smooths.forEach(function (s) {\n        that.scrollSettings.scrollers.push(s);\n      });\n    };\n\n    this.resize = function () {\n      clearTimeout(this.resizingScreenTimeout);\n      var that = this;\n      this.resizingScreenTimeout = setTimeout(function () {\n        that.virtualScroll(true);\n      }, 100);\n    };\n\n    var currentY = 0,\n        ease = 0.1;\n    var currentYBG = 0,\n        easeBG = 0.0725;\n    var targetY = 0;\n\n    this.virtualScroll = function (destroy) {\n\n      if (destroy) {\n        targetY = currentY;\n        this.vScroll.off();\n      }\n\n      this.vScroll = new _virtualScroll2.default({ firefoxMultiplier: 25 });\n      var section = document.getElementById(\"scroll-section\");\n      var sectionBG = document.getElementById(\"scroll-section-background\");\n      var sectionHeight = section.getBoundingClientRect().height;\n\n      var actPoints = [];\n      var actPointEles = [].slice.call(document.querySelectorAll('[data-actpoint]'));\n      for (var x = 0; x < actPointEles.length; x++) {\n        var _actPoint = actPointEles[x];\n        var _actPointAction = _actPoint.getAttribute(\"data-actpoint\") || null;\n        if (_actPointAction) {\n          var action = JSON.parse(_actPointAction);\n          var _offset = _actPoint.offsetTop - window.innerHeight;\n          if (action) {\n            var actionKey = Object.keys(action);\n            var ele = document.querySelector(action[actionKey[0]]);\n            if (ele) {\n              actPoints.push({ \"point\": _offset, \"class\": actionKey[0], \"element\": ele });\n            }\n          }\n        }\n      }\n\n      this.vScroll.on(function (e) {\n        targetY += e.deltaY;\n        targetY = Math.max((sectionHeight - window.innerHeight) * -1, targetY);\n        targetY = Math.min(0, targetY);\n      });\n\n      var run = function run() {\n\n        requestAnimationFrame(run);\n\n        currentY += Math.round((targetY - currentY) * ease, 2);\n        currentYBG += Math.round((targetY - currentYBG) * easeBG, 2);\n\n        for (var _x = 0; _x < actPoints.length; _x++) {\n\n          var ap = actPoints[_x];\n          var point = ap.point * -1;\n          var classAdd = ap.class;\n          var _ele = ap.element;\n\n          if (currentY < point) {\n            _ele.classList.add(classAdd);\n          } else {\n            _ele.classList.remove(classAdd);\n          }\n        }\n\n        var t = 'translateY(' + currentY + 'px)';\n        var s = section.style;\n        s[\"transform\"] = t;\n        s[\"webkitTransform\"] = t;\n        s[\"mozTransform\"] = t;\n        s[\"msTransform\"] = t;\n\n        // var tB = 'translateY(' + currentYBG + 'px)';\n        // var sB = sectionBG.style;\n        // sB[\"transform\"] = tB;\n        // sB[\"webkitTransform\"] = tB;\n        // sB[\"mozTransform\"] = tB;\n        // sB[\"msTransform\"] = tB;\n      };\n\n      run();\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function () {\n\n      this.screens.loading.classList.add(\"out\");\n      this.screens.home.classList.add(\"active\");\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n\n      if (this.scrollType === \"screens\") {\n\n        document.body.addEventListener(\"wheel\", this.slide.bind(this));\n        document.body.addEventListener(\"touchstart\", this.slideTouchEvent.bind(this));\n        document.body.addEventListener(\"touchmove\", this.slideTouchEvent.bind(this));\n      }\n\n      if (this.scrollType === \"smooth\") {\n        // this.addSmoothScrollers();\n        // document.body.addEventListener(\"wheel\", this.scroll.bind(this));\n\n        document.addEventListener('touchmove', function (e) {\n          e.preventDefault();\n        });\n\n        // window.addEventListener('resize', this.resize.bind(this));\n\n        this.virtualScroll();\n      }\n    };\n\n    this.clearLetterTimeout = null;\n    this.removeLettersState = [];\n    this.instantRemoveState = [];\n    this.clearLetterAnswers = function (instantRemove) {\n\n      var removeSet;\n\n      if (instantRemove) {\n        removeSet = instantRemove;\n      } else {\n        removeSet = this.removeLettersState;\n        this.instantRemoveState = [];\n        this.removeLettersState = [];\n      }\n\n      removeSet.forEach(function (e) {\n        e.classList.remove('active');\n        e.style.left = 0;\n      });\n    };\n\n    this.revealLetterAnswers = function (ele) {\n\n      clearTimeout(this.clearLetterTimeout);\n\n      this.instantRemoveState = this.removeLettersState;\n      if (this.instantRemoveState.length > 0) {\n        this.clearLetterAnswers(this.instantRemoveState);\n      }\n\n      var answer = ele.getAttribute('data-answer');\n      var answers = answer.split(',');\n\n      for (var x = 0; x < answers.length; x++) {\n        var _activateE = document.querySelector('.' + answers[x]);\n        var _size = Math.min(window.innerWidth / 18, 55);\n        var _left = x * _size + \"px\";\n        _activateE.classList.add('active');\n        _activateE.style.left = _left;\n        this.removeLettersState.push(_activateE);\n      }\n\n      this.instantRemoveState = [];\n      this.clearLetterTimeout = setTimeout(this.clearLetterAnswers.bind(this), 4400);\n    };\n  }\n\n  return new Screen();\n}();\n\nwindow.controller = controller;\n\n},{\"virtual-scroll\":12}],2:[function(require,module,exports){\n'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n},{}],4:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":2,\"ieee754\":8,\"isarray\":5}],5:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n(function (Buffer){\nvar clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":4}],7:[function(require,module,exports){\nvar clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};\n},{\"clone\":6}],8:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],9:[function(require,module,exports){\n// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n\n},{}],10:[function(require,module,exports){\nfunction E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n\n},{\"./clone\":11,\"./support\":13,\"bindall-standalone\":3,\"defaults\":7,\"lethargy\":9,\"tiny-emitter\":10}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();\n},{}]},{},[1])\n\n","import vs from 'virtual-scroll';\n\nvar controller;\n\n(function(){\n  'use strict';\n  var minTimeout = 50;\n  var maxTimeout = 2200;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  setTimeout(function() {\n\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if ( htmlClass.indexOf('wf-active') !== -1 ) {\n      fontLoaded = true;\n    }\n    if ( domLoaded && fontLoaded ) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  setTimeout(function(){\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener('DOMContentLoaded', function() {\n\n    domLoaded = true;\n\n    if ( stillNeedToLoad ) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n\n  });\n\n  window.handleOrientation = function(){\n    setTimeout(function(){\n      // Hide the address bar!\n      window.scrollTo(0, 1);\n    }, 0);\n  };\n\n  window.addEventListener('load', handleOrientation, false);\n\n  window.addEventListener(\"deviceorientation\", handleOrientation, true);\n\n})();\n\ncontroller = (function(){\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById(\"slide-number\");\n    this.slideNumberTotalEle = document.getElementById(\"slide-number-total\");\n    this.allScreens = [].slice.call(document.querySelectorAll(\".screen\"));\n\n    this.app = document.getElementById(\"app\");\n    this.scrollType = this.app.getAttribute(\"data-scroll\") || \"screens\";\n    this.scrollSettings = {\n      slide : 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0,\n      timeEase: 0,\n      scrollers: [],\n      rafStarted: false,\n    };\n    this.rAFStart = null;\n    this.working = false;\n    this.resizingScreenTimeout = null;\n    this.vScroll = null;\n\n\n    this.screens = {\n      loading : document.querySelector(\".loader\"),\n      // home : document.querySelector(\".screen--home\"),\n      // ottoform: document.querySelector(\".screen--ottoform\"),\n      // frnkrok: document.querySelector(\".screen--frnkrok\"),\n      // jlv3: document.querySelector(\".screen--jlv3\"),\n      // juiced: document.querySelector(\".screen--juiced\"),\n\n    };\n\n    this.bindScreens = function(slide){\n      var key = slide.getAttribute(\"data-screen\");\n      if ( key ) {\n        this.screens[key] = slide;\n      }\n    };\n\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n\n    this.menu = document.querySelector(\".screen--menu\");\n    this.menuContainer = document.getElementById(\"jl-menu\");\n    this.menuOpen = false;\n\n    this.screenKeys = Object.keys( this.screens );\n\n    this.backgrounds = {\n      home: document.querySelector(\".video-home\"),\n      ottoform: document.querySelector(\".video-ottoform\"),\n      frnkrok: document.querySelector(\".video-frnkrok\"),\n      jlv3: document.querySelector(\".video-jlv3\"),\n      juiced: document.querySelector(\".video-juiced\"),\n    };\n\n    /* Touch event function */\n    this.slideTouchEvent = function(e){\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if ( e.type === 'touchmove' && this.scrollSettings.pos ) {\n        e.preventDefault();\n        var _scrollDelta = ( this.scrollSettings.pos - e.touches[0].clientY ) * 2;\n        if ( _scrollDelta > 10 ) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if ( _scrollDelta < -10 ) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function(evt) {\n      if (!evt) evt = event;\n      var w=evt.wheelDelta, d=evt.detail;\n      if (d){\n        if (w) return w/d/40*d>0?1:-1; // Opera\n        else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n      else {\n        return -evt.deltaY/15;\n      }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    */\n    this.slide = function(e, touchDelta) {\n\n      if ( this.working ) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function(evt) {\n         return (evt.detail<0) ? 1 : (evt.wheelDelta>0) ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function(evt){\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if ( touchDelta ) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if ( _distance <= 0.25 && _distance >= -0.25 ) {\n        this.working = true;\n        setTimeout(function(){\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      // var _deltaY = e.deltaY;\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if ( _direction === -1 ) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = ( _screenOn === this.screenKeys.length  ) ? 1 : _screenOn; // fix later remove static num\n      } else if ( _direction === 1 ) {\n        // decrease screen\n        _screenOn = this.scrollSettings.slide - 1;\n        _screenOn = ( _screenOn <= 0 ) ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n      }\n\n      _keyTo = this.screenKeys[_screenOn];\n\n      this.toggle(_keyFrom, _keyTo);\n\n    };\n\n\n\n    this.toggle = function(from, to) {\n\n      if ( this.menuOpen === true ) {\n        this.working = false;\n        return false;\n      }\n\n      window.handleOrientation();\n\n      this.screens.home.classList.remove(\"active\");\n\n      this.screens[from].classList.remove(\"slide-in\");\n      this.screens[from].classList.remove(\"fade-out\");\n      this.screens[from].classList.add(\"slide-out\");\n\n      this.screens[to].classList.add(\"slide-in\");\n      this.screens[to].classList.remove(\"slide-out\");\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for(var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\"number\">' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove(\"slide-out\");\n        }\n        _slideCount++;\n      }\n\n      if ( this.backgrounds[from] ) {\n        this.backgrounds[from].setAttribute(\"data-enable\", \"false\");\n      }\n\n      if ( this.backgrounds[to] ) {\n        this.backgrounds[to].setAttribute(\"data-enable\", \"true\");\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function(){\n        that.working = false;\n      }, 1500);\n\n    };\n\n\n    this.scroll  = function(e) {\n\n      var scrollDistance = this.wheelDistance(e);\n      var _distance = this.scrollSettings.distance + scrollDistance;\n      this.scrollSettings.distance = Math.min(0,_distance);\n      this.scrollSettings.timeEase = performance.now() + 400;\n\n      if ( !this.scrollSettings.rafStarted ) {\n        window.requestAnimationFrame(this.rAF.bind(this));\n      }\n\n    };\n\n    this.easeInOutQuad = function (t, b, c, d, s) {\n        if (s === undefined) s = 1.70158;\n        return c*(t/=d)*t + b;\n    };\n\n    this.rAF = function(timestamp) {\n\n      this.scrollSettings.rafStarted = true;\n\n      if (!this.rAFStart) this.rAFStart = timestamp;\n      var progress = timestamp - this.rAFStart;\n      var _distance = this.scrollSettings.distance;\n      var _timeTo = this.scrollSettings.timeEase;\n      var easeOutQuad = this.easeInOutQuad;\n      var speedFactor = 45;\n\n      this.scrollSettings.scrollers.forEach(function(s) {\n\n\n\n        var currentPoint = parseInt(s.getAttribute(\"data-scrolled\")) || 0;\n        var speed = (parseInt(s.getAttribute(\"data-ss\")) || 1) * speedFactor;\n        var destinationPoint = ( _distance ) * speed;\n        var ease = Math.round(easeOutQuad(timestamp, currentPoint, (destinationPoint - currentPoint), _timeTo));\n        ease = Math.max(destinationPoint,ease);\n        // console.log(currentPoint, destinationPoint, ease);\n        // magicPoint += ease;\n        // magicPoint = ( magicPoint < 0 ) ? magicPoint : 0;\n        // ease = ( ease < 0 ) ? ease : 0;\n\n        var up = ease  + 'px';\n        s.style.webkitTransform = 'translateY('+up+') translateZ(0)';\n        s.style.MozTransform = 'translateY('+up+') translateZ(0)';\n        s.style.msTransform = 'translateY('+up+') translateZ(0)';\n        s.style.OTransform = 'translateY('+up+') translateZ(0)';\n        s.style.transform = 'translateY('+up+') translateZ(0)';\n        s.setAttribute(\"data-scrolled\", destinationPoint);\n\n      });\n\n      // recall rAF\n      window.requestAnimationFrame(this.rAF.bind(this));\n    };\n\n\n\n    this.openMenu = function() {\n\n      this.menu.classList.remove(\"fade-out-slow\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.add(\"fade-out-slow\");\n      }\n\n      this.menu.classList.add(\"fade-in\");\n      this.menuOpen = true;\n      this.menuContainer.classList.add(\"activate\");\n\n    };\n\n    this.closeMenu = function() {\n\n      this.menu.classList.remove(\"fade-in\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.remove(\"fade-out-slow\");\n      }\n\n      this.menu.classList.remove(\"fade-in\");\n      this.menu.classList.add(\"fade-out-slow\");\n      this.menuOpen = false;\n      this.menuContainer.classList.remove(\"activate\");\n\n\n    };\n\n    this.toggleMenu = function() {\n      if ( this.menuOpen ) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n    this.addSmoothScrollers = function() {\n      var smooths = [].slice.call(document.querySelectorAll(\".scroller\"));\n      var that = this;\n      smooths.forEach(function(s) {\n        that.scrollSettings.scrollers.push(s);\n      });\n    };\n\n    this.resize = function() {\n      clearTimeout(this.resizingScreenTimeout);\n      var that = this;\n      this.resizingScreenTimeout = setTimeout(function(){\n        that.virtualScroll(true);\n      }, 100);\n    };\n\n    var currentY = 0, ease = 0.1;\n    var currentYBG = 0, easeBG = 0.0725;\n    var targetY = 0;\n\n    this.virtualScroll = function(destroy) {\n\n      if ( destroy ) {\n        targetY = currentY;\n        this.vScroll.off();\n      }\n\n      this.vScroll = new vs({firefoxMultiplier: 25});\n      var section = document.getElementById(\"scroll-section\");\n      var sectionBG = document.getElementById(\"scroll-section-background\");\n      var sectionHeight = section.getBoundingClientRect().height;\n\n      var actPoints = [];\n      var actPointEles = [].slice.call(document.querySelectorAll('[data-actpoint]'));\n      for(var x = 0; x < actPointEles.length; x++ ) {\n        let _actPoint = actPointEles[x];\n        let _actPointAction = _actPoint.getAttribute(\"data-actpoint\") || null;\n        if ( _actPointAction ){\n          var action = JSON.parse(_actPointAction);\n          var _offset = _actPoint.offsetTop - window.innerHeight;\n          if ( action ) {\n            var actionKey = Object.keys(action);\n            let ele = document.querySelector(action[actionKey[0]]);\n            if ( ele ) {\n              actPoints.push({ \"point\" : _offset, \"class\" : actionKey[0], \"element\" : ele });\n            }\n          }\n        }\n      }\n\n      this.vScroll.on(function(e) {\n          targetY += e.deltaY;\n          targetY = Math.max( (sectionHeight - window.innerHeight) * -1, targetY);\n          targetY = Math.min(0, targetY);\n      });\n\n\n      var run = function() {\n\n          requestAnimationFrame(run);\n\n          currentY += Math.round( (targetY - currentY) * ease, 2);\n          currentYBG += Math.round( (targetY - currentYBG) * easeBG, 2);\n\n          for (let x = 0; x < actPoints.length; x++ ) {\n\n            let ap = actPoints[x];\n            let point = ap.point * -1;\n            let classAdd = ap.class;\n            let ele = ap.element;\n\n            if ( currentY < point ) {\n              ele.classList.add(classAdd);\n            } else {\n              ele.classList.remove(classAdd);\n            }\n          }\n\n          var t = 'translateY(' + currentY + 'px)';\n          var s = section.style;\n          s[\"transform\"] = t;\n          s[\"webkitTransform\"] = t;\n          s[\"mozTransform\"] = t;\n          s[\"msTransform\"] = t;\n\n          // var tB = 'translateY(' + currentYBG + 'px)';\n          // var sB = sectionBG.style;\n          // sB[\"transform\"] = tB;\n          // sB[\"webkitTransform\"] = tB;\n          // sB[\"mozTransform\"] = tB;\n          // sB[\"msTransform\"] = tB;\n\n\n      };\n\n      run();\n\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function() {\n\n      this.screens.loading.classList.add(\"out\");\n      this.screens.home.classList.add(\"active\");\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n\n      if ( this.scrollType === \"screens\" ) {\n\n        document.body.addEventListener(\"wheel\", this.slide.bind(this));\n        document.body.addEventListener(\"touchstart\", this.slideTouchEvent.bind(this));\n        document.body.addEventListener(\"touchmove\", this.slideTouchEvent.bind(this));\n\n      }\n\n      if ( this.scrollType === \"smooth\" ) {\n        // this.addSmoothScrollers();\n        // document.body.addEventListener(\"wheel\", this.scroll.bind(this));\n\n        document.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        });\n\n        // window.addEventListener('resize', this.resize.bind(this));\n\n        this.virtualScroll();\n\n      }\n\n\n    };\n\n    this.clearLetterTimeout = null;\n    this.removeLettersState = [];\n    this.instantRemoveState = [];\n    this.clearLetterAnswers = function(instantRemove) {\n\n      var removeSet;\n\n      if ( instantRemove ) {\n        removeSet = instantRemove;\n      } else {\n        removeSet = this.removeLettersState;\n        this.instantRemoveState = [];\n        this.removeLettersState = [];\n      }\n\n      removeSet.forEach(function(e) {\n        e.classList.remove('active');\n        e.style.left = 0;\n\n      });\n\n\n\n    };\n\n    this.revealLetterAnswers = function(ele){\n\n      clearTimeout(this.clearLetterTimeout);\n\n      this.instantRemoveState = this.removeLettersState;\n      if ( this.instantRemoveState.length > 0 ) {\n        this.clearLetterAnswers(this.instantRemoveState);\n      }\n\n      var answer = ele.getAttribute('data-answer');\n      var answers = answer.split(',');\n\n      for ( var x = 0; x < answers.length; x++ ) {\n        var _activateE = document.querySelector('.' + answers[x]);\n        var _size = Math.min((window.innerWidth / 18), 55);\n        var _left = (x * _size) + \"px\";\n        _activateE.classList.add('active');\n        _activateE.style.left = _left;\n        this.removeLettersState.push(_activateE);\n\n      }\n\n      this.instantRemoveState = [];\n      this.clearLetterTimeout = setTimeout(this.clearLetterAnswers.bind(this), 4400);\n\n    };\n\n  }\n\n  return new Screen();\n\n})();\n\nwindow.controller = controller;\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","var clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n","function E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};","'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n","'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();"],"sourceRoot":"/source/"}