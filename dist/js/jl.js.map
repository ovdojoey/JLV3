{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jl.js","js/jl.js","node_modules/base64-js/lib/b64.js","node_modules/bindall-standalone/index.js","node_modules/buffer/index.js","node_modules/buffer/node_modules/isarray/index.js","node_modules/clone/clone.js","node_modules/defaults/index.js","node_modules/ieee754/index.js","node_modules/lethargy/lethargy.js","node_modules/tiny-emitter/index.js","node_modules/virtual-scroll/src/clone.js","node_modules/virtual-scroll/src/index.js","node_modules/virtual-scroll/src/support.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","controller","_virtualScroll","_virtualScroll2","minTimeout","maxTimeout","domLoaded","stillNeedToLoad","fontLoaded","setTimeout","htmlClass","slice","document","documentElement","classList","indexOf","loadHome","window","addEventListener","Screen","this","slideNumberEle","getElementById","slideNumberTotalEle","allScreens","querySelectorAll","app","scrollType","getAttribute","scrollSettings","slide","timeout","videoTimeout","pos","distance","timeEase","scrollers","working","resizingScreenTimeout","vScroll","screens","loading","querySelector","backgrounds","home","ottoform","frnkrok","jlv3","juiced","menu","menuContainer","writings","writingsContainer","writingBlock","leftScreenPane","writingProgressLoader","menuOpen","bindScreens","key","forEach","bind","screenKeys","Object","keys","slideTouchEvent","type","touches","clientY","preventDefault","_scrollDelta","direction","wheelDistance","evt","event","w","wheelDelta","d","detail","deltaY","touchDelta","_direction","_distance","returnWheelDirection","that","returnWheelDistance","_screenOn","_keyTo","_keyFrom","toggle","from","to","remove","add","_slideCount","screen","innerHTML","setAttribute","openMenu","closeMenu","toggleMenu","resize","clearTimeout","virtualScroll","rAF","currentY","ease","currentYBG","easeBG","targetY","destroy","off","cancelAnimationFrame","firefoxMultiplier","section","sectionBG","sectionHeight","getBoundingClientRect","height","actPoints","actPointEles","x","_actPoint","_actPointAction","action","JSON","parse","_offset","offsetTop","innerHeight","actionKey","ele","push","point","class","element","on","Math","max","min","run","requestAnimationFrame","round","_x","ap","classAdd","_ele","style","tB","sB","_this","innerText","body","isParentWritingBlock","target","treeDepth","parentNode","id","links","writingLinks","link","writingLink","onpopstate","updateReaderOnPop","openReaderPane","closeReaderPane","title","state","reading","closeReader","stateObj","history","pushState","location","display","className","_location","href","httpRequest","XMLHttpRequest","showWriting","readyState","DONE","status","doc","implementation","createHTMLDocument","responseText","html","scrollTop","onreadystatechange","open","send","clearLetterTimeout","removeLettersState","instantRemoveState","clearLetterAnswers","instantRemove","removeSet","left","revealLetterAnswers","answer","answers","split","_activateE","_size","innerWidth","_left","virtual-scroll",2,"init","len","lookup","revLookup","charCodeAt","toByteArray","b64","j","tmp","placeHolders","arr","Arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array",3,"func","context","apply","arguments","toString","prototype","hasOwnProperty","object","console","warn","functions","method",4,"global","typedArraySupport","foo","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","write","fromArrayLike","array","byteOffset","isBuffer","copy","buffer","isnan","isArray","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","swap","b","m","arrayIndexOf","val","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","y","concat","list","swap16","swap32","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","self","base64-js","isarray",5,6,"clone","parent","circular","depth","_clone","child","proto","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","useBuffer","getPrototypeOf","create","index","allParents","allChildren","attrs","getOwnPropertyDescriptor","filter","__objToStr","re","flags","ignoreCase","multiline","clonePrototype",7,"options","defaults",8,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2",9,"root","Lethargy","stability","sensitivity","tolerance","delay","lastUpDeltas","ref","results","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","now","shift","isInertia","lastDeltas","lastDeltasNew","lastDeltasOld","newAverage","newSum","oldAverage","oldSum","reduce","showLastUpDeltas","showLastDownDeltas",10,"E","name","callback","ctx","fn","once","listener","_","emit","evtArr","evts","liveEvents",11,"stringify",12,"VirtualScroll","bindAll","mouseMultiplier","touchMultiplier","keyStep","preventTouch","unpreventTouchClass","limitInertia","_lethargy","_emitter","Emitter","_event","deltaX","touchStartX","touchStartY","bodyTouchAction","support","EVT_ID","keyCodes","LEFT","UP","RIGHT","DOWN","_notify","_onWheel","wheelDeltaX","wheelDeltaY","isFirefox","deltaMode","_onMouseWheel","_onTouchStart","targetTouches","pageX","pageY","_onTouchMove","contains","_onKeyDown","keyCode","_bind","hasWheelEvent","hasMouseWheelEvent","hasTouch","hasPointer","hasTouchWin","msTouchAction","hasKeyDown","_unbind","removeEventListener","cb","events","reset","./clone","./support","bindall-standalone","lethargy","tiny-emitter",13,"navigator","msMaxTouchPoints","msPointerEnabled","userAgent"],"mappings":"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","file":"jl.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _virtualScroll = require('virtual-scroll');\n\nvar _virtualScroll2 = _interopRequireDefault(_virtualScroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar controller;\n\n(function () {\n  'use strict';\n\n  var minTimeout = 200;\n  var maxTimeout = 1700;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  // Try to load page as quickly as possible if fonts/content loaded\n  setTimeout(function () {\n\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if (htmlClass.indexOf('wf-active') !== -1) {\n      fontLoaded = true;\n    }\n    if (domLoaded && fontLoaded) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  // If unable to load above, loadHome() regardless after maxTimeout is reached\n  setTimeout(function () {\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener('DOMContentLoaded', function () {\n\n    domLoaded = true;\n\n    if (stillNeedToLoad) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n  });\n})();\n\ncontroller = function () {\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById('slide-number');\n    this.slideNumberTotalEle = document.getElementById('slide-number-total');\n    this.allScreens = [].slice.call(document.querySelectorAll('.screen'));\n    this.app = document.getElementById('app');\n    this.scrollType = this.app.getAttribute('data-scroll') || 'screens';\n    this.scrollSettings = {\n      slide: 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0,\n      timeEase: 0,\n      scrollers: []\n    };\n    this.working = false;\n    this.resizingScreenTimeout = null;\n    this.vScroll = null;\n    this.screens = {\n      loading: document.querySelector('.loader')\n    };\n    this.backgrounds = {\n      home: document.querySelector('.video-home'),\n      ottoform: document.querySelector('.video-ottoform'),\n      frnkrok: document.querySelector('.video-frnkrok'),\n      jlv3: document.querySelector('.video-jlv3'),\n      juiced: document.querySelector('.video-juiced')\n    };\n    this.menu = document.querySelector('.screen--menu');\n    this.menuContainer = document.getElementById('jl-menu');\n    this.writings = document.getElementById('writings-list');\n    this.writingsContainer = document.getElementById('writings-container');\n    this.writingBlock = document.getElementById('writing-block');\n    this.leftScreenPane = document.getElementById('left-screen-pane');\n    this.writingProgressLoader = document.getElementById('writing-progress-bar');\n\n    this.menuOpen = false;\n\n    /**\n    * Binds each screen loaded from this.allScreens to the screens object\n    * for later use\n    *\n    * @param slide - Object - the dom slide object\n    */\n    this.bindScreens = function (slide) {\n      var key = slide.getAttribute('data-screen');\n      if (key) {\n        this.screens[key] = slide;\n      }\n    };\n\n    // runs bindScreens();\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n    // Helper function grab the keys of this.screens\n    this.screenKeys = Object.keys(this.screens);\n\n    /** Touch Event Listener Function\n    *\n    * Acts as a helper to reach the slide function upon a touch event from  a\n    * touch device.\n    *\n    * @param e - Event - the touch event\n    */\n    this.slideTouchEvent = function (e) {\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if (e.type === 'touchmove' && this.scrollSettings.pos) {\n        e.preventDefault();\n        var _scrollDelta = (this.scrollSettings.pos - e.touches[0].clientY) * 2;\n        if (_scrollDelta > 10) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if (_scrollDelta < -10) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function (evt) {\n      if (!evt) evt = event;\n      var w = evt.wheelDelta,\n          d = evt.detail;\n      if (d) {\n        if (w) return w / d / 40 * d > 0 ? 1 : -1; // Opera\n        else return -d / 3; // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w / 120; // IE/Safari/Chrome TODO: /3 for Chrome OS X\n        else {\n            return -evt.deltaY / 15;\n          }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    * @param touchDelta - event - a touch event\n    */\n    this.slide = function (e, touchDelta) {\n\n      if (this.working) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function returnWheelDirection(evt) {\n        return evt.detail < 0 ? 1 : evt.wheelDelta > 0 ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function returnWheelDistance(evt) {\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if (touchDelta) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if (_distance <= 0.25 && _distance >= -0.25) {\n        this.working = true;\n        setTimeout(function () {\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if (_direction === -1) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = _screenOn === this.screenKeys.length ? 1 : _screenOn; // fix later remove static num\n      } else if (_direction === 1) {\n          // decrease screen\n          _screenOn = this.scrollSettings.slide - 1;\n          _screenOn = _screenOn <= 0 ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n        }\n\n      _keyTo = this.screenKeys[_screenOn];\n      this.toggle(_keyFrom, _keyTo);\n    };\n\n    this.toggle = function (from, to) {\n\n      if (this.menuOpen === true) {\n        this.working = false;\n        return false;\n      }\n\n      this.screens.home.classList.remove('active');\n\n      this.screens[from].classList.remove('slide-in');\n      this.screens[from].classList.remove('fade-out');\n      this.screens[from].classList.add('slide-out');\n\n      this.screens[to].classList.add('slide-in');\n      this.screens[to].classList.remove('slide-out');\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for (var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\\'number\\'>' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove('slide-out');\n        }\n        _slideCount++;\n      }\n\n      if (this.backgrounds[from]) {\n        this.backgrounds[from].setAttribute('data-enable', 'false');\n      }\n\n      if (this.backgrounds[to]) {\n        this.backgrounds[to].setAttribute('data-enable', 'true');\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function () {\n        that.working = false;\n      }, 1350);\n    };\n\n    this.openMenu = function () {\n\n      this.menu.classList.remove('fade-out-slow');\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.add('fade-out-slow');\n      }\n\n      this.menu.classList.add('fade-in');\n      this.menuOpen = true;\n      this.menuContainer.classList.add('activate');\n    };\n\n    this.closeMenu = function () {\n\n      this.menu.classList.remove('fade-in');\n\n      for (var screen in this.screens) {\n        this.screens[screen].classList.remove('fade-out-slow');\n      }\n\n      this.menu.classList.remove('fade-in');\n      this.menu.classList.add('fade-out-slow');\n      this.menuOpen = false;\n      this.menuContainer.classList.remove('activate');\n    };\n\n    this.toggleMenu = function () {\n      if (this.menuOpen) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n    this.resize = function () {\n      clearTimeout(this.resizingScreenTimeout);\n      var that = this;\n      this.resizingScreenTimeout = setTimeout(function () {\n        that.virtualScroll(true);\n      }, 100);\n    };\n\n    var currentY = 0,\n        ease = 0.1;\n    var currentYBG = 0,\n        easeBG = 0.085;\n    var targetY = 0;\n    var rAF;\n\n    /** this.virtualScroll\n    * Creates the virtual scroll instance\n    *\n    * @param boolean destroy - if true fires .off() method on vScroll and mututates\n    * object into a new vs instance.\n    */\n    this.virtualScroll = function (destroy) {\n\n      if (destroy) {\n        targetY = currentY;\n        this.vScroll.off();\n        window.cancelAnimationFrame(rAF);\n      }\n\n      this.vScroll = new _virtualScroll2.default({ firefoxMultiplier: 25 });\n      var section = document.getElementById('scroll-section');\n      var sectionBG = document.getElementById('scroll-section-background');\n      var sectionHeight = section.getBoundingClientRect().height;\n\n      var actPoints = [];\n      var actPointEles = [].slice.call(document.querySelectorAll('[data-actpoint]'));\n      for (var x = 0; x < actPointEles.length; x++) {\n        var _actPoint = actPointEles[x];\n        var _actPointAction = _actPoint.getAttribute('data-actpoint') || null;\n        if (_actPointAction) {\n          var action = JSON.parse(_actPointAction);\n          var _offset = _actPoint.offsetTop - window.innerHeight;\n          if (action) {\n            var actionKey = Object.keys(action);\n            var ele = document.querySelector(action[actionKey[0]]);\n            if (ele) {\n              actPoints.push({ point: _offset, class: actionKey[0], element: ele });\n            }\n          }\n        }\n      }\n\n      this.vScroll.on(function (e) {\n        targetY += e.deltaY;\n        targetY = Math.max((sectionHeight - window.innerHeight) * -1, targetY);\n        targetY = Math.min(0, targetY);\n      });\n\n      var run = function run() {\n\n        rAF = requestAnimationFrame(run);\n\n        currentY += Math.round((targetY - currentY) * ease, 2);\n        currentYBG += Math.round((targetY - currentYBG) * easeBG, 2);\n\n        for (var _x = 0; _x < actPoints.length; _x++) {\n\n          var ap = actPoints[_x];\n          var point = ap.point * -1;\n          var classAdd = ap.class;\n          var _ele = ap.element;\n\n          if (currentY < point) {\n            _ele.classList.add(classAdd);\n          } else {\n            _ele.classList.remove(classAdd);\n          }\n        }\n\n        var t = 'translateY(' + currentY + 'px)';\n        var s = section.style;\n        s['transform'] = t;\n        s['webkitTransform'] = t;\n        s['mozTransform'] = t;\n        s['msTransform'] = t;\n\n        var tB = 'translateY(' + currentYBG + 'px)';\n        var sB = sectionBG.style;\n        sB['transform'] = tB;\n        sB['webkitTransform'] = tB;\n        sB['mozTransform'] = tB;\n        sB['msTransform'] = tB;\n      };\n\n      run();\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function () {\n      var _this = this;\n\n      this.screens.loading.classList.add('out');\n      this.screens.home.classList.add('active');\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n\n      if (this.scrollType === 'screens') {\n\n        document.body.addEventListener('wheel', this.slide.bind(this));\n        document.body.addEventListener('touchstart', this.slideTouchEvent.bind(this));\n        document.body.addEventListener('touchmove', this.slideTouchEvent.bind(this));\n      }\n\n      if (this.scrollType === 'smooth') {\n        (function () {\n\n          var isParentWritingBlock = function isParentWritingBlock(target, treeDepth) {\n            treeDepth = treeDepth || 0;\n            if (treeDepth > 6) {\n              treeDepth = 0;\n              return false;\n            }\n            if (!target.parentNode) return false;\n            return target.id !== 'writing-block' ? isParentWritingBlock(target.parentNode, ++treeDepth) : true;\n          };\n\n          document.addEventListener('touchmove', function (e) {\n            if (e.target && !isParentWritingBlock(e.target)) e.preventDefault();\n          });\n\n          window.addEventListener('resize', _this.resize.bind(_this));\n\n          _this.virtualScroll();\n        })();\n      }\n\n      if (this.writings) {\n        // intercept links\n        var links = this.writings.querySelectorAll('a');\n        var writingLinks = [].slice.call(links);\n        var that = this;\n        writingLinks.forEach(function (link) {\n          link.addEventListener('click', function (e) {\n            that.writingLink(e, this);\n          });\n        });\n        window.onpopstate = this.updateReaderOnPop.bind(this);\n      }\n    };\n\n    this.openReaderPane = function () {\n      this.leftScreenPane.classList.add('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'true');\n    };\n\n    this.closeReaderPane = function () {\n      this.leftScreenPane.classList.remove('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'false');\n      window.document.title = 'Joey Lea - Writings';\n    };\n\n    this.updateReaderOnPop = function (e) {\n      if (e.state && e.state.reading && e.state.reading !== 'none') this.writingLink(null, null, e.state.reading);else this.closeReaderPane();\n    };\n\n    this.closeReader = function () {\n      this.closeReaderPane();\n      var stateObj = { reading: null };\n      history.pushState(stateObj, 'Joey Lea- Writings', '/writings/');\n    };\n\n    this.writingLink = function (e, link, location) {\n\n      if (e) e.preventDefault();\n\n      this.writingBlock.style.display = 'none';\n\n      this.writingProgressLoader.className = 'progress-bar';\n\n      this.openReaderPane();\n\n      var _location;\n      if (location) {\n        _location = location;\n      } else {\n        _location = link.href;\n      }\n\n      var httpRequest = new XMLHttpRequest();\n\n      if (!httpRequest) {\n        return false;\n      }\n\n      var showWriting = function showWriting() {\n        if (httpRequest.readyState === XMLHttpRequest.DONE) {\n          if (httpRequest.status === 200) {\n            if (link) {\n              var stateObj = { reading: _location };\n              history.pushState(stateObj, 'Joey Lea- Writings', _location);\n            }\n            var doc = document.implementation.createHTMLDocument('writing-doc');\n            doc.documentElement.innerHTML = httpRequest.responseText;\n            var html = doc.getElementById('writing-block');\n            this.writingBlock.innerHTML = html.innerHTML;\n            this.writingBlock.style.display = 'block';\n            this.writingProgressLoader.classList.add('finish');\n            this.writingBlock.scrollTop = 0;\n            window.document.title = doc.title || 'Joey Lea - Writings';\n            targetY = 0;\n          } else {\n            this.writingBlock.innerHTML = 'Something went wrong';\n          }\n        }\n      };\n\n      this.writingProgressLoader.classList.add('start');\n      httpRequest.onreadystatechange = showWriting.bind(this);\n      httpRequest.open('GET', _location);\n      httpRequest.send();\n    };\n\n    this.clearLetterTimeout = null;\n    this.removeLettersState = [];\n    this.instantRemoveState = [];\n    this.clearLetterAnswers = function (instantRemove) {\n\n      var removeSet;\n\n      if (instantRemove) {\n        removeSet = instantRemove;\n      } else {\n        removeSet = this.removeLettersState;\n        this.instantRemoveState = [];\n        this.removeLettersState = [];\n      }\n\n      removeSet.forEach(function (e) {\n        e.classList.remove('active');\n        e.style.left = e.getAttribute('data-left');\n      });\n    };\n\n    this.revealLetterAnswers = function (ele) {\n\n      clearTimeout(this.clearLetterTimeout);\n\n      this.instantRemoveState = this.removeLettersState;\n      if (this.instantRemoveState.length > 0) {\n        this.clearLetterAnswers(this.instantRemoveState);\n      }\n\n      var answer = ele.getAttribute('data-answer');\n      var answers = answer.split(',');\n\n      for (var x = 0; x < answers.length; x++) {\n        var _activateE = document.querySelector('.' + answers[x]);\n        _activateE.setAttribute('data-left', _activateE.style.left);\n        var _size = Math.min(window.innerWidth / 18, 55);\n        var _left = x * _size + 'px';\n        _activateE.classList.add('active');\n        _activateE.style.left = _left;\n        this.removeLettersState.push(_activateE);\n      }\n\n      this.instantRemoveState = [];\n      this.clearLetterTimeout = setTimeout(this.clearLetterAnswers.bind(this), 4400);\n    };\n  }\n\n  return new Screen();\n}();\n\nwindow.controller = controller;\n\n},{\"virtual-scroll\":12}],2:[function(require,module,exports){\n'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n},{}],4:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":2,\"ieee754\":8,\"isarray\":5}],5:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],6:[function(require,module,exports){\n(function (Buffer){\nvar clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":4}],7:[function(require,module,exports){\nvar clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};\n},{\"clone\":6}],8:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],9:[function(require,module,exports){\n// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n\n},{}],10:[function(require,module,exports){\nfunction E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n\n},{\"./clone\":11,\"./support\":13,\"bindall-standalone\":3,\"defaults\":7,\"lethargy\":9,\"tiny-emitter\":10}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();\n},{}]},{},[1])\n\n","import vs from 'virtual-scroll';\n\nvar controller;\n\n(function(){\n  'use strict';\n  var minTimeout = 200;\n  var maxTimeout = 1700;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n  var fontLoaded = false;\n\n  // Try to load page as quickly as possible if fonts/content loaded\n  setTimeout(function() {\n\n    var htmlClass = [].slice.call(document.documentElement.classList);\n    if ( htmlClass.indexOf('wf-active') !== -1 ) {\n      fontLoaded = true;\n    }\n    if ( domLoaded && fontLoaded ) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  // If unable to load above, loadHome() regardless after maxTimeout is reached\n  setTimeout(function(){\n    if (stillNeedToLoad) {\n      controller.loadHome();\n    }\n  }, maxTimeout);\n\n  window.addEventListener('DOMContentLoaded', function() {\n\n    domLoaded = true;\n\n    if ( stillNeedToLoad ) {\n      stillNeedToLoad = false;\n      controller.loadHome();\n    }\n\n  });\n\n})();\n\ncontroller = (function(){\n\n  'use strict';\n\n  function Screen() {\n\n    this.slideNumberEle = document.getElementById('slide-number');\n    this.slideNumberTotalEle = document.getElementById('slide-number-total');\n    this.allScreens = [].slice.call(document.querySelectorAll('.screen'));\n    this.app = document.getElementById('app');\n    this.scrollType = this.app.getAttribute('data-scroll') || 'screens';\n    this.scrollSettings = {\n      slide : 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n      distance: 0,\n      timeEase: 0,\n      scrollers: []\n    };\n    this.working = false;\n    this.resizingScreenTimeout = null;\n    this.vScroll = null;\n    this.screens = {\n      loading : document.querySelector('.loader')\n    };\n    this.backgrounds = {\n      home: document.querySelector('.video-home'),\n      ottoform: document.querySelector('.video-ottoform'),\n      frnkrok: document.querySelector('.video-frnkrok'),\n      jlv3: document.querySelector('.video-jlv3'),\n      juiced: document.querySelector('.video-juiced')\n    };\n    this.menu = document.querySelector('.screen--menu');\n    this.menuContainer = document.getElementById('jl-menu');\n    this.writings = document.getElementById('writings-list');\n    this.writingsContainer = document.getElementById('writings-container');\n    this.writingBlock = document.getElementById('writing-block');\n    this.leftScreenPane = document.getElementById('left-screen-pane');\n    this.writingProgressLoader = document.getElementById('writing-progress-bar');\n\n    this.menuOpen = false;\n\n\n    /**\n    * Binds each screen loaded from this.allScreens to the screens object\n    * for later use\n    *\n    * @param slide - Object - the dom slide object\n    */\n    this.bindScreens = function(slide){\n      var key = slide.getAttribute('data-screen');\n      if ( key ) {\n        this.screens[key] = slide;\n      }\n    };\n\n    // runs bindScreens();\n    this.allScreens.forEach(this.bindScreens.bind(this));\n\n    // Helper function grab the keys of this.screens\n    this.screenKeys = Object.keys( this.screens );\n\n\n\n\n    /** Touch Event Listener Function\n    *\n    * Acts as a helper to reach the slide function upon a touch event from  a\n    * touch device.\n    *\n    * @param e - Event - the touch event\n    */\n    this.slideTouchEvent = function(e){\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if ( e.type === 'touchmove' && this.scrollSettings.pos ) {\n        e.preventDefault();\n        var _scrollDelta = ( this.scrollSettings.pos - e.touches[0].clientY ) * 2;\n        if ( _scrollDelta > 10 ) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if ( _scrollDelta < -10 ) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n\n    /** Helper function to return wheel scroll distance\n    * See: http://phrogz.net/js/wheeldelta.html\n    *\n    * @return integer - normalizzed distance of scroll\n    */\n    this.wheelDistance = function(evt) {\n      if (!evt) evt = event;\n      var w=evt.wheelDelta, d=evt.detail;\n      if (d){\n        if (w) return w/d/40*d>0?1:-1; // Opera\n        else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n      } else if (w) return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n      else {\n        return -evt.deltaY/15;\n      }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    * @param touchDelta - event - a touch event\n    */\n    this.slide = function(e, touchDelta) {\n\n      if ( this.working ) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function(evt) {\n        return (evt.detail<0) ? 1 : (evt.wheelDelta>0) ? 1 : -1;\n      };\n\n      var that = this;\n      var returnWheelDistance = function(evt){\n        return that.wheelDistance(evt);\n      };\n\n      var _direction;\n      var _distance;\n\n      if ( touchDelta ) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n      if ( _distance <= 0.25 && _distance >= -0.25 ) {\n        this.working = true;\n        setTimeout(function(){\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if ( _direction === -1 ) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = ( _screenOn === this.screenKeys.length  ) ? 1 : _screenOn; // fix later remove static num\n      } else if ( _direction === 1 ) {\n        // decrease screen\n        _screenOn = this.scrollSettings.slide - 1;\n        _screenOn = ( _screenOn <= 0 ) ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n      }\n\n      _keyTo = this.screenKeys[_screenOn];\n      this.toggle(_keyFrom, _keyTo);\n\n    };\n\n\n\n    this.toggle = function(from, to) {\n\n      if ( this.menuOpen === true ) {\n        this.working = false;\n        return false;\n      }\n\n      this.screens.home.classList.remove('active');\n\n      this.screens[from].classList.remove('slide-in');\n      this.screens[from].classList.remove('fade-out');\n      this.screens[from].classList.add('slide-out');\n\n      this.screens[to].classList.add('slide-in');\n      this.screens[to].classList.remove('slide-out');\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for(var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\\'number\\'>' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove('slide-out');\n        }\n        _slideCount++;\n      }\n\n      if ( this.backgrounds[from] ) {\n        this.backgrounds[from].setAttribute('data-enable', 'false');\n      }\n\n      if ( this.backgrounds[to] ) {\n        this.backgrounds[to].setAttribute('data-enable', 'true');\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function(){\n        that.working = false;\n      }, 1350);\n\n    };\n\n\n\n    this.openMenu = function() {\n\n      this.menu.classList.remove('fade-out-slow');\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.add('fade-out-slow');\n      }\n\n      this.menu.classList.add('fade-in');\n      this.menuOpen = true;\n      this.menuContainer.classList.add('activate');\n\n    };\n\n    this.closeMenu = function() {\n\n      this.menu.classList.remove('fade-in');\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.remove('fade-out-slow');\n      }\n\n      this.menu.classList.remove('fade-in');\n      this.menu.classList.add('fade-out-slow');\n      this.menuOpen = false;\n      this.menuContainer.classList.remove('activate');\n\n\n    };\n\n    this.toggleMenu = function() {\n      if ( this.menuOpen ) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n\n    this.resize = function() {\n      clearTimeout(this.resizingScreenTimeout);\n      var that = this;\n      this.resizingScreenTimeout = setTimeout(function(){\n        that.virtualScroll(true);\n      }, 100);\n    };\n\n    var currentY = 0, ease = 0.1;\n    var currentYBG = 0, easeBG = 0.085;\n    var targetY = 0;\n    var rAF;\n\n\n    /** this.virtualScroll\n    * Creates the virtual scroll instance\n    *\n    * @param boolean destroy - if true fires .off() method on vScroll and mututates\n    * object into a new vs instance.\n    */\n    this.virtualScroll = function(destroy) {\n\n      if ( destroy ) {\n        targetY = currentY;\n        this.vScroll.off();\n        window.cancelAnimationFrame(rAF);\n      }\n\n      this.vScroll = new vs({firefoxMultiplier: 25});\n      var section = document.getElementById('scroll-section');\n      var sectionBG = document.getElementById('scroll-section-background');\n      var sectionHeight = section.getBoundingClientRect().height;\n\n      var actPoints = [];\n      var actPointEles = [].slice.call(document.querySelectorAll('[data-actpoint]'));\n      for(var x = 0; x < actPointEles.length; x++ ) {\n        let _actPoint = actPointEles[x];\n        let _actPointAction = _actPoint.getAttribute('data-actpoint') || null;\n        if ( _actPointAction ){\n          var action = JSON.parse(_actPointAction);\n          var _offset = _actPoint.offsetTop - window.innerHeight;\n          if ( action ) {\n            var actionKey = Object.keys(action);\n            let ele = document.querySelector(action[actionKey[0]]);\n            if ( ele ) {\n              actPoints.push({ point : _offset, class : actionKey[0], element : ele });\n            }\n          }\n        }\n      }\n\n      this.vScroll.on(function(e) {\n        targetY += e.deltaY;\n        targetY = Math.max( (sectionHeight - window.innerHeight) * -1, targetY);\n        targetY = Math.min(0, targetY);\n      });\n\n\n      var run = function() {\n\n        rAF = requestAnimationFrame(run);\n\n        currentY += Math.round( (targetY - currentY) * ease, 2);\n        currentYBG += Math.round( (targetY - currentYBG) * easeBG, 2);\n\n        for (let x = 0; x < actPoints.length; x++ ) {\n\n          let ap = actPoints[x];\n          let point = ap.point * -1;\n          let classAdd = ap.class;\n          let ele = ap.element;\n\n          if ( currentY < point ) {\n            ele.classList.add(classAdd);\n          } else {\n            ele.classList.remove(classAdd);\n          }\n        }\n\n        var t = 'translateY(' + currentY + 'px)';\n        var s = section.style;\n        s['transform'] = t;\n        s['webkitTransform'] = t;\n        s['mozTransform'] = t;\n        s['msTransform'] = t;\n\n        var tB = 'translateY(' + currentYBG + 'px)';\n        var sB = sectionBG.style;\n        sB['transform'] = tB;\n        sB['webkitTransform'] = tB;\n        sB['mozTransform'] = tB;\n        sB['msTransform'] = tB;\n\n\n      };\n\n      run();\n\n    };\n\n    /**\n    * Fired from controller.loadHome() outside of this scope.\n    * Loads the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function() {\n\n      this.screens.loading.classList.add('out');\n      this.screens.home.classList.add('active');\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n\n      if ( this.scrollType === 'screens' ) {\n\n        document.body.addEventListener('wheel', this.slide.bind(this));\n        document.body.addEventListener('touchstart', this.slideTouchEvent.bind(this));\n        document.body.addEventListener('touchmove', this.slideTouchEvent.bind(this));\n\n      }\n\n      if ( this.scrollType === 'smooth' ) {\n\n        const isParentWritingBlock = function(target, treeDepth) {\n          treeDepth = treeDepth || 0;\n          if (treeDepth > 6) {\n            treeDepth = 0;\n            return false;\n          }\n          if ( !target.parentNode ) return false;\n          return (target.id !== 'writing-block') ? isParentWritingBlock(target.parentNode, ++treeDepth) : true ;\n        };\n\n        document.addEventListener('touchmove', function(e) {\n          if ( e.target && !isParentWritingBlock(e.target))\n            e.preventDefault();\n        });\n\n        window.addEventListener('resize', this.resize.bind(this));\n\n        this.virtualScroll();\n\n      }\n\n      if ( this.writings ) {\n        // intercept links\n        var links = this.writings.querySelectorAll('a');\n        var writingLinks = [].slice.call(links);\n        var that = this;\n        writingLinks.forEach(function(link) {\n          link.addEventListener('click', function(e){\n            that.writingLink(e, this);\n          });\n        });\n        window.onpopstate = this.updateReaderOnPop.bind(this);\n      }\n\n    };\n\n    this.openReaderPane = function() {\n      this.leftScreenPane.classList.add('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'true');\n    };\n\n    this.closeReaderPane = function() {\n      this.leftScreenPane.classList.remove('open-pane');\n      this.writingsContainer.setAttribute('data-activate', 'false');\n      window.document.title =  'Joey Lea - Writings';\n\n    };\n\n    this.updateReaderOnPop = function(e) {\n      if ( e.state && e.state.reading && e.state.reading !== 'none' )\n        this.writingLink(null,null,e.state.reading);\n      else\n        this.closeReaderPane();\n    };\n\n    this.closeReader = function() {\n      this.closeReaderPane();\n      var stateObj = { reading: null };\n      history.pushState(stateObj, 'Joey Lea- Writings', '/writings/');\n\n    };\n\n    this.writingLink = function(e, link, location) {\n\n      if (e)\n        e.preventDefault();\n\n      this.writingBlock.style.display = 'none';\n\n      this.writingProgressLoader.className = 'progress-bar';\n\n      this.openReaderPane();\n\n      var _location;\n      if ( location ) {\n        _location = location;\n      }\n      else{\n        _location = link.href;\n      }\n\n      var httpRequest = new XMLHttpRequest();\n\n      if (!httpRequest) {\n        return false;\n      }\n\n      const showWriting = function(){\n        if ( httpRequest.readyState === XMLHttpRequest.DONE ) {\n          if ( httpRequest.status === 200 )\n          {\n            if ( link ) {\n              var stateObj = { reading: _location };\n              history.pushState(stateObj, 'Joey Lea- Writings', _location);\n            }\n            var doc = document.implementation.createHTMLDocument('writing-doc');\n            doc.documentElement.innerHTML = httpRequest.responseText;\n            var html = doc.getElementById('writing-block');\n            this.writingBlock.innerHTML = html.innerHTML;\n            this.writingBlock.style.display = 'block';\n            this.writingProgressLoader.classList.add('finish');\n            this.writingBlock.scrollTop = 0;\n            window.document.title = doc.title || 'Joey Lea - Writings';\n            targetY = 0;\n\n          } else {\n            this.writingBlock.innerHTML = 'Something went wrong';\n          }\n        }\n      };\n\n      this.writingProgressLoader.classList.add('start');\n      httpRequest.onreadystatechange = showWriting.bind(this);\n      httpRequest.open('GET', _location);\n      httpRequest.send();\n\n\n    };\n\n\n    this.clearLetterTimeout = null;\n    this.removeLettersState = [];\n    this.instantRemoveState = [];\n    this.clearLetterAnswers = function(instantRemove) {\n\n      var removeSet;\n\n      if ( instantRemove ) {\n        removeSet = instantRemove;\n      } else {\n        removeSet = this.removeLettersState;\n        this.instantRemoveState = [];\n        this.removeLettersState = [];\n      }\n\n      removeSet.forEach(function(e) {\n        e.classList.remove('active');\n        e.style.left = e.getAttribute('data-left');\n\n      });\n\n\n\n    };\n\n    this.revealLetterAnswers = function(ele){\n\n      clearTimeout(this.clearLetterTimeout);\n\n      this.instantRemoveState = this.removeLettersState;\n      if ( this.instantRemoveState.length > 0 ) {\n        this.clearLetterAnswers(this.instantRemoveState);\n      }\n\n      var answer = ele.getAttribute('data-answer');\n      var answers = answer.split(',');\n\n      for ( var x = 0; x < answers.length; x++ ) {\n        var _activateE = document.querySelector('.' + answers[x]);\n        _activateE.setAttribute('data-left', _activateE.style.left);\n        var _size = Math.min((window.innerWidth / 18), 55);\n        var _left = (x * _size) + 'px';\n        _activateE.classList.add('active');\n        _activateE.style.left = _left;\n        this.removeLettersState.push(_activateE);\n\n      }\n\n      this.instantRemoveState = [];\n      this.clearLetterTimeout = setTimeout(this.clearLetterAnswers.bind(this), 4400);\n\n    };\n\n  }\n\n  return new Screen();\n\n})();\n\nwindow.controller = controller;\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var foundIndex = -1\n  for (var i = 0; byteOffset + i < arrLength; i++) {\n    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n      if (foundIndex === -1) foundIndex = i\n      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize\n    } else {\n      if (foundIndex !== -1) i -= i - foundIndex\n      foundIndex = -1\n    }\n  }\n  return -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    // special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(this, val, byteOffset, encoding)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset, encoding)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; i++) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","var clone = require('clone');\n\nmodule.exports = function(options, defaults) {\n  options = options || {};\n\n  Object.keys(defaults).forEach(function(key) {\n    if (typeof options[key] === 'undefined') {\n      options[key] = clone(defaults[key]);\n    }\n  });\n\n  return options;\n};","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n","function E () {\n\t// Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n\ton: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};","'use strict';\n\nvar defaults = require('defaults');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.options = defaults(options || {}, {\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false\n    });\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) document.addEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.addEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.addEventListener('touchstart', this._onTouchStart);\n        document.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        document.addEventListener('MSPointerDown', this._onTouchStart, true);\n        document.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) document.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) document.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        document.removeEventListener('touchstart', this._onTouchStart);\n        document.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        document.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        document.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n","'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: 'ontouchstart' in document,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();"],"sourceRoot":"/source/"}