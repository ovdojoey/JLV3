{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/jl.js","jl.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","minTimeout","domLoaded","stillNeedToLoad","setTimeout","controller","loadHome","window","addEventListener","event","Screen","this","slideNumberEle","document","getElementById","slideNumberTotalEle","app","scrollSettings","slide","timeout","videoTimeout","pos","working","screens","loading","querySelector","home","ottoform","frnkrok","jlv3","juiced","menu","menuOpen","screenKeys","Object","keys","backgrounds","touchEvent","type","touches","clientY","preventDefault","_scrollDelta","distance","direction","touchDelta","_direction","_distance","returnWheelDirection","evt","detail","wheelDelta","returnWheelDistance","w","d","that","_screenOn","_keyTo","_keyFrom","toggle","from","to","classList","remove","add","_slideCount","screen","innerHTML","setAttribute","openMenu","closeMenu","toggleMenu","innerText","body","bind"],"mappings":"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","file":"jl.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n(function(){\n  'use strict';\n  var minTimeout = 400;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n\n  setTimeout(function(){\n    if ( domLoaded ) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  window.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    domLoaded = true;\n\n    if ( stillNeedToLoad ) {\n      controller.loadHome();\n    }\n  });\n})();\n\nwindow.controller = (function(){\n\n  'use strict';\n\n  function Screen() {\n\n\n    this.slideNumberEle = document.getElementById(\"slide-number\");\n    this.slideNumberTotalEle = document.getElementById(\"slide-number-total\");\n    this.app = document.getElementById(\"app\");\n    this.scrollSettings = {\n      slide : 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n    };\n    this.working = false;\n    this.screens = {\n      loading : document.querySelector(\".loader\"),\n      home : document.querySelector(\".screen--home\"),\n      ottoform: document.querySelector(\".screen--ottoform\"),\n      frnkrok: document.querySelector(\".screen--frnkrok\"),\n      jlv3: document.querySelector(\".screen--jlv3\"),\n      juiced: document.querySelector(\".screen--juiced\"),\n    };\n\n    this.menu = document.querySelector(\".screen--menu\");\n    this.menuOpen = false;\n\n    this.screenKeys = Object.keys( this.screens );\n\n    this.backgrounds = {\n      home: document.querySelector(\".video-home\"),\n      ottoform: document.querySelector(\".video-ottoform\"),\n      frnkrok: document.querySelector(\".video-frnkrok\"),\n      jlv3: document.querySelector(\".video-jlv3\"),\n      juiced: document.querySelector(\".video-juiced\"),\n    };\n\n\n\n    /* Touch event function */\n    this.touchEvent = function(e){\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if ( e.type === 'touchmove' && this.scrollSettings.pos ) {\n        e.preventDefault();\n        var _scrollDelta = ( this.scrollSettings.pos - e.touches[0].clientY ) * 2;\n        if ( _scrollDelta > 10 ) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if ( _scrollDelta < -10 ) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    */\n    this.slide = function(e, touchDelta) {\n\n      if ( this.working ) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function(evt) {\n         return (evt.detail<0) ? 1 : (evt.wheelDelta>0) ? 1 : -1;\n      };\n\n\n      /** Helper function to return wheel scroll distance\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - normalizzed distance of scroll\n      */\n      var returnWheelDistance = function(evt){\n        if (!evt) evt = event;\n        var w=evt.wheelDelta, d=evt.detail;\n        if (d){\n          if (w) return w/d/40*d>0?1:-1; // Opera\n          else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n        } else return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n      };\n\n      var _direction;\n      var _distance;\n\n      if ( touchDelta ) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n\n      if ( _distance < 0.5 && _distance > -0.5 ) {\n        this.working = true;\n        var that = this;\n        setTimeout(function(){\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      // var _deltaY = e.deltaY;\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if ( _direction === -1 ) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = ( _screenOn === this.screenKeys.length  ) ? 1 : _screenOn; // fix later remove static num\n      } else if ( _direction === 1 ) {\n        // decrease screen\n        _screenOn = this.scrollSettings.slide - 1;\n        _screenOn = ( _screenOn <= 0 ) ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n      }\n\n      _keyTo = this.screenKeys[_screenOn];\n\n      this.toggle(_keyFrom, _keyTo);\n\n    };\n\n\n\n    this.toggle = function(from, to) {\n\n      if ( this.menuOpen === true ) {\n        this.working = false;\n        return false;\n      }\n\n      this.screens.home.classList.remove(\"active\");\n\n      this.screens[from].classList.remove(\"slide-in\");\n      this.screens[from].classList.remove(\"fade-out\");\n      this.screens[from].classList.add(\"slide-out\");\n\n      this.screens[to].classList.add(\"slide-in\");\n      this.screens[to].classList.remove(\"slide-out\");\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for(var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\"number\">' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove(\"slide-out\");\n        }\n        _slideCount++;\n      }\n\n      if ( this.backgrounds[from] ) {\n        this.backgrounds[from].setAttribute(\"data-enable\", \"false\");\n      }\n\n      if ( this.backgrounds[to] ) {\n        this.backgrounds[to].setAttribute(\"data-enable\", \"true\");\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function(){\n        that.working = false;\n      }, 1500);\n\n    };\n\n\n    this.openMenu = function() {\n\n      this.menu.classList.remove(\"fade-out-slow\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.add(\"fade-out-slow\");\n      }\n\n      this.menu.classList.add(\"fade-in\");\n      this.menuOpen = true;\n\n    };\n\n    this.closeMenu = function() {\n\n      this.menu.classList.remove(\"fade-in\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.remove(\"fade-out-slow\");\n      }\n\n      this.menu.classList.remove(\"fade-in\");\n      this.menu.classList.add(\"fade-out-slow\");\n      this.menuOpen = false;\n\n    };\n\n    this.toggleMenu = function() {\n      if ( this.menuOpen ) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n\n    /**\n    * Fires the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function() {\n      this.screens.loading.classList.add(\"out\");\n      this.screens.home.classList.add(\"active\");\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n      document.body.addEventListener(\"wheel\", this.slide.bind(this));\n      document.body.addEventListener(\"touchstart\", this.touchEvent.bind(this));\n      document.body.addEventListener(\"touchmove\", this.touchEvent.bind(this));\n    };\n\n  }\n\n  return new Screen();\n\n})();\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n(function(){\n  'use strict';\n  var minTimeout = 400;\n  var domLoaded = false;\n  var stillNeedToLoad = false;\n\n  setTimeout(function(){\n    if ( domLoaded ) {\n      controller.loadHome();\n      return false;\n    }\n    stillNeedToLoad = true;\n  }, minTimeout);\n\n  window.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    domLoaded = true;\n\n    if ( stillNeedToLoad ) {\n      controller.loadHome();\n    }\n  });\n})();\n\nwindow.controller = (function(){\n\n  'use strict';\n\n  function Screen() {\n\n\n    this.slideNumberEle = document.getElementById(\"slide-number\");\n    this.slideNumberTotalEle = document.getElementById(\"slide-number-total\");\n    this.app = document.getElementById(\"app\");\n    this.scrollSettings = {\n      slide : 1,\n      timeout: null,\n      videoTimeout: null,\n      pos: null,\n    };\n    this.working = false;\n    this.screens = {\n      loading : document.querySelector(\".loader\"),\n      home : document.querySelector(\".screen--home\"),\n      ottoform: document.querySelector(\".screen--ottoform\"),\n      frnkrok: document.querySelector(\".screen--frnkrok\"),\n      jlv3: document.querySelector(\".screen--jlv3\"),\n      juiced: document.querySelector(\".screen--juiced\"),\n    };\n\n    this.menu = document.querySelector(\".screen--menu\");\n    this.menuOpen = false;\n\n    this.screenKeys = Object.keys( this.screens );\n\n    this.backgrounds = {\n      home: document.querySelector(\".video-home\"),\n      ottoform: document.querySelector(\".video-ottoform\"),\n      frnkrok: document.querySelector(\".video-frnkrok\"),\n      jlv3: document.querySelector(\".video-jlv3\"),\n      juiced: document.querySelector(\".video-juiced\"),\n    };\n\n\n\n    /* Touch event function */\n    this.touchEvent = function(e){\n      // touch event\n      if (e.type === 'touchstart') {\n        this.scrollSettings.pos = e.touches[0].clientY;\n      }\n\n      if ( e.type === 'touchmove' && this.scrollSettings.pos ) {\n        e.preventDefault();\n        var _scrollDelta = ( this.scrollSettings.pos - e.touches[0].clientY ) * 2;\n        if ( _scrollDelta > 10 ) {\n          this.slide({}, { distance: 0.55, direction: -1 });\n        } else if ( _scrollDelta < -10 ) {\n          this.slide({}, { distance: 0.55, direction: 1 });\n        }\n        this.scrollSettings.pos = null;\n      }\n    };\n\n    /**\n    * Slide Event.  Fired on wheel event change\n    *\n    * @param e - event - the wheel event that fired\n    */\n    this.slide = function(e, touchDelta) {\n\n      if ( this.working ) {\n        return false;\n      }\n\n      /** Helper function to return wheel direction\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - direction of scroll down = -1, up = 1\n      */\n      var returnWheelDirection = function(evt) {\n         return (evt.detail<0) ? 1 : (evt.wheelDelta>0) ? 1 : -1;\n      };\n\n\n      /** Helper function to return wheel scroll distance\n      * See: http://phrogz.net/js/wheeldelta.html\n      *\n      * @return integer - normalizzed distance of scroll\n      */\n      var returnWheelDistance = function(evt){\n        if (!evt) evt = event;\n        var w=evt.wheelDelta, d=evt.detail;\n        if (d){\n          if (w) return w/d/40*d>0?1:-1; // Opera\n          else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n        } else return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n      };\n\n      var _direction;\n      var _distance;\n\n      if ( touchDelta ) {\n        _direction = touchDelta.direction;\n        _distance = touchDelta.distance;\n      } else {\n        _direction = returnWheelDirection(e);\n        _distance = returnWheelDistance(e);\n      }\n\n\n      if ( _distance < 0.5 && _distance > -0.5 ) {\n        this.working = true;\n        var that = this;\n        setTimeout(function(){\n          that.working = false;\n        }, 250);\n        return false;\n      } else {\n        this.working = true;\n      }\n\n      // var _deltaY = e.deltaY;\n      var _screenOn;\n      var _keyFrom = this.screenKeys[this.scrollSettings.slide];\n      var _keyTo;\n\n      if ( _direction === -1 ) {\n        // increase screen\n        _screenOn = this.scrollSettings.slide + 1;\n        _screenOn = ( _screenOn === this.screenKeys.length  ) ? 1 : _screenOn; // fix later remove static num\n      } else if ( _direction === 1 ) {\n        // decrease screen\n        _screenOn = this.scrollSettings.slide - 1;\n        _screenOn = ( _screenOn <= 0 ) ? this.screenKeys.length - 1 : _screenOn; // fix later remove static num\n      }\n\n      _keyTo = this.screenKeys[_screenOn];\n\n      this.toggle(_keyFrom, _keyTo);\n\n    };\n\n\n\n    this.toggle = function(from, to) {\n\n      if ( this.menuOpen === true ) {\n        this.working = false;\n        return false;\n      }\n\n      this.screens.home.classList.remove(\"active\");\n\n      this.screens[from].classList.remove(\"slide-in\");\n      this.screens[from].classList.remove(\"fade-out\");\n      this.screens[from].classList.add(\"slide-out\");\n\n      this.screens[to].classList.add(\"slide-in\");\n      this.screens[to].classList.remove(\"slide-out\");\n\n      // remove slide out from all\n      var _slideCount = 0;\n      for(var screen in this.screens) {\n        if (screen === to) {\n          this.slideNumberEle.innerHTML = '<span class=\"number\">' + _slideCount + '</span>';\n          this.scrollSettings.slide = _slideCount;\n        }\n        if (screen !== from) {\n          this.screens[screen].classList.remove(\"slide-out\");\n        }\n        _slideCount++;\n      }\n\n      if ( this.backgrounds[from] ) {\n        this.backgrounds[from].setAttribute(\"data-enable\", \"false\");\n      }\n\n      if ( this.backgrounds[to] ) {\n        this.backgrounds[to].setAttribute(\"data-enable\", \"true\");\n      }\n\n      var that = this;\n      this.scrollSettings.timeout = setTimeout(function(){\n        that.working = false;\n      }, 1500);\n\n    };\n\n\n    this.openMenu = function() {\n\n      this.menu.classList.remove(\"fade-out-slow\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.add(\"fade-out-slow\");\n      }\n\n      this.menu.classList.add(\"fade-in\");\n      this.menuOpen = true;\n\n    };\n\n    this.closeMenu = function() {\n\n      this.menu.classList.remove(\"fade-in\");\n\n      for(var screen in this.screens) {\n        this.screens[screen].classList.remove(\"fade-out-slow\");\n      }\n\n      this.menu.classList.remove(\"fade-in\");\n      this.menu.classList.add(\"fade-out-slow\");\n      this.menuOpen = false;\n\n    };\n\n    this.toggleMenu = function() {\n      if ( this.menuOpen ) {\n        this.closeMenu();\n      } else {\n        this.openMenu();\n      }\n    };\n\n\n    /**\n    * Fires the home loader to load the first screen. Also fires the wheel\n    * listener to listen for scroll events.\n    */\n    this.loadHome = function() {\n      this.screens.loading.classList.add(\"out\");\n      this.screens.home.classList.add(\"active\");\n      this.slideNumberTotalEle.innerText = this.screenKeys.length - 1;\n      document.body.addEventListener(\"wheel\", this.slide.bind(this));\n      document.body.addEventListener(\"touchstart\", this.touchEvent.bind(this));\n      document.body.addEventListener(\"touchmove\", this.touchEvent.bind(this));\n    };\n\n  }\n\n  return new Screen();\n\n})();\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}